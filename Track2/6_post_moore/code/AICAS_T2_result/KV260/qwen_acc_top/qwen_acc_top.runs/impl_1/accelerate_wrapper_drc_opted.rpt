Copyright 1986-2022 Xilinx, Inc. All Rights Reserved. Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2023.2 (win64) Build 4029153 Fri Oct 13 20:14:34 MDT 2023
| Date         : Mon Mar 24 15:53:54 2025
| Host         : DESKTOP-66QCD9K running 64-bit major release  (build 9200)
| Command      : report_drc -file accelerate_wrapper_drc_opted.rpt -pb accelerate_wrapper_drc_opted.pb -rpx accelerate_wrapper_drc_opted.rpx
| Design       : accelerate_wrapper
| Device       : xck26-sfvc784-2LV-c
| Speed File   : -2LV
| Design State : Synthesized
---------------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 1537
+-----------+----------+---------------------------------------------------------------------+------------+
| Rule      | Severity | Description                                                         | Violations |
+-----------+----------+---------------------------------------------------------------------+------------+
| DPIP-2    | Warning  | Input pipelining                                                    | 208        |
| DPOP-3    | Warning  | PREG Output pipelining                                              | 160        |
| DPOP-4    | Warning  | MREG Output pipelining                                              | 1136       |
| DPREG-7   | Warning  | DSP48E2_PregDynOpmodeZmuxP:                                         | 16         |
| REQP-1935 | Warning  | RAMB36E2_nochange_collision_advisory                                | 1          |
| AVAL-155  | Advisory | enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND | 16         |
+-----------+----------+---------------------------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
DPIP-2#1 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#2 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#3 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#4 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#5 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#6 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#7 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#8 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#9 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#10 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#11 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#12 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#13 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#14 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#15 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#16 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#17 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#18 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#19 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#20 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#21 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#22 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#23 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#24 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#25 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#26 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#27 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#28 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#29 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#30 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#31 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#32 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#33 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#34 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#35 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#36 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#37 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#38 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#39 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#40 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#41 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#42 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#43 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#44 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#45 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#46 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#47 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#48 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#49 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#50 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#51 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#52 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#53 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#54 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#55 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#56 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#57 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#58 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#59 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#60 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#61 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#62 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#63 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#64 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#65 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#66 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#67 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#68 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#69 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#70 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#71 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#72 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#73 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#74 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#75 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#76 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#77 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#78 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#79 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#80 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#81 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#82 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#83 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#84 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#85 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#86 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#87 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#88 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#89 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#90 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#91 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#92 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#93 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#94 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#95 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#96 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#97 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#98 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#99 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#100 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#101 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#102 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#103 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#104 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#105 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#106 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#107 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#108 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#109 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#110 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#111 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#112 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#113 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#114 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#115 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#116 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#117 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#118 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#119 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#120 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#121 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#122 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#123 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#124 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#125 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#126 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#127 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#128 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#129 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#130 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#131 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#132 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#133 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#134 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#135 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#136 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#137 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#138 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#139 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#140 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#141 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#142 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#143 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#144 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#145 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#146 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#147 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#148 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#149 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#150 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#151 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#152 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#153 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#154 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#155 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#156 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#157 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#158 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#159 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#160 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#161 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#162 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#163 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#164 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#165 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#166 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#167 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#168 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#169 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#170 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#171 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#172 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#173 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#174 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#175 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#176 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#177 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#178 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#179 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#180 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#181 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#182 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#183 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#184 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#185 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#186 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#187 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#188 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#189 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#190 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#191 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#192 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#193 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#194 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#195 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#196 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/i0 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/i0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#197 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#198 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#199 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#200 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#201 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#202 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#203 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#204 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#205 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#206 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#207 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#208 Warning
Input pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 input accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-3#1 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#2 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#3 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#4 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#5 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#6 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#7 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#8 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#9 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#10 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#11 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#12 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#13 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#14 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#15 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#16 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#17 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#18 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#19 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#20 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#21 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#22 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#23 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#24 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#25 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#26 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#27 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#28 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#29 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#30 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#31 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#32 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#33 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#34 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#35 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#36 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#37 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#38 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#39 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#40 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#41 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#42 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#43 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#44 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#45 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#46 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#47 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#48 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#49 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#50 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#51 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#52 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#53 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#54 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#55 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#56 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#57 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#58 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#59 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#60 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#61 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#62 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#63 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#64 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#65 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#66 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#67 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#68 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#69 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#70 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#71 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#72 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#73 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#74 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#75 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#76 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#77 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#78 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#79 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#80 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#81 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#82 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#83 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#84 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#85 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#86 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#87 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#88 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#89 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#90 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#91 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#92 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#93 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#94 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#95 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#96 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#97 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#98 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#99 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#100 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#101 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#102 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#103 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#104 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#105 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#106 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#107 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#108 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#109 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#110 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#111 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#112 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#113 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#114 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#115 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#116 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#117 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#118 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#119 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#120 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#121 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#122 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#123 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#124 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#125 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#126 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#127 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#128 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#129 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#130 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#131 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#132 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#133 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#134 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#135 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#136 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#137 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#138 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#139 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#140 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#141 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#142 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#143 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#144 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#145 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#146 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#147 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#148 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#149 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#150 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#151 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/i0 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/i0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#152 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#153 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#154 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#155 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#156 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#157 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#158 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#159 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#160 Warning
PREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 output accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-4#1 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#2 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#3 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#4 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#5 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#6 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#7 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#8 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#9 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#10 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#11 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#12 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#13 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#14 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#15 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#16 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#17 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#18 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#19 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#20 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#21 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#22 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#23 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#24 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#25 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#26 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#27 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#28 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#29 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#30 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#31 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#32 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#33 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#34 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#35 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#36 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#37 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#38 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#39 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#40 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#41 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#42 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#43 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#44 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#45 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#46 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#47 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#48 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#49 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#50 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#51 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#52 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#53 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#54 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#55 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#56 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#57 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#58 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#59 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#60 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#61 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#62 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#63 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#64 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#65 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#66 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#67 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#68 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#69 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#70 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#71 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#72 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#73 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#74 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#75 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#76 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#77 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#78 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#79 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#80 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#81 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#82 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#83 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#84 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#85 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#86 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#87 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#88 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#89 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#90 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#91 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#92 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#93 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#94 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#95 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#96 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#97 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#98 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#99 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#100 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#101 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#102 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#103 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#104 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#105 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#106 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#107 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#108 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#109 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#110 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#111 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#112 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#113 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#114 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#115 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#116 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#117 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#118 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#119 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#120 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#121 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#122 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#123 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#124 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#125 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#126 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#127 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#128 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#129 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#130 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#131 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#132 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#133 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#134 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#135 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#136 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#137 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#138 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#139 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#140 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#141 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#142 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#143 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#144 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#145 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#146 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#147 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#148 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#149 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#150 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#151 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#152 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#153 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#154 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#155 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#156 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#157 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#158 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#159 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#160 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#161 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#162 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#163 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#164 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#165 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#166 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#167 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#168 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#169 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#170 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#171 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#172 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#173 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#174 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#175 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#176 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#177 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#178 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#179 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#180 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#181 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#182 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#183 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#184 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#185 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#186 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#187 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#188 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#189 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#190 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#191 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#192 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#193 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#194 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#195 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#196 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#197 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#198 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#199 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#200 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#201 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#202 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#203 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#204 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#205 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#206 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#207 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#208 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#209 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#210 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#211 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#212 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#213 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#214 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#215 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#216 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#217 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#218 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#219 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#220 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#221 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#222 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#223 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#224 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#225 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#226 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#227 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#228 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#229 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#230 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#231 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#232 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#233 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#234 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#235 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#236 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#237 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#238 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#239 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#240 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#241 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#242 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#243 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#244 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#245 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#246 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#247 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#248 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#249 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#250 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#251 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#252 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#253 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#254 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#255 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#256 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#257 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#258 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#259 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#260 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#261 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#262 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#263 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#264 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#265 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#266 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#267 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#268 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#269 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#270 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#271 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#272 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#273 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#274 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#275 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#276 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#277 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#278 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#279 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#280 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#281 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#282 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#283 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#284 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#285 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#286 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#287 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#288 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#289 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#290 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#291 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#292 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#293 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#294 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#295 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#296 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#297 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#298 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#299 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#300 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#301 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#302 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#303 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#304 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#305 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#306 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#307 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#308 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#309 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#310 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#311 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#312 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#313 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#314 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#315 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#316 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#317 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#318 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#319 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#320 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#321 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#322 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#323 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#324 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#325 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#326 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#327 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#328 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#329 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#330 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#331 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#332 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#333 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#334 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#335 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#336 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#337 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#338 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#339 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#340 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#341 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#342 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#343 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#344 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#345 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#346 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#347 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#348 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#349 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#350 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#351 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#352 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#353 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#354 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#355 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#356 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#357 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#358 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#359 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#360 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#361 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#362 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#363 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#364 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#365 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#366 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#367 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#368 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#369 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#370 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#371 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#372 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#373 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#374 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#375 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#376 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#377 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#378 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#379 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#380 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#381 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#382 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#383 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#384 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#385 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#386 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#387 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#388 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#389 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#390 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#391 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#392 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#393 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#394 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#395 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#396 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#397 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#398 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#399 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#400 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#401 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#402 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#403 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#404 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#405 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#406 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#407 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#408 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#409 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#410 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#411 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#412 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#413 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#414 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#415 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#416 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#417 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#418 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#419 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#420 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#421 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#422 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#423 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#424 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#425 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#426 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#427 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#428 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#429 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#430 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#431 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#432 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#433 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#434 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#435 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#436 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#437 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#438 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#439 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#440 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#441 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#442 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#443 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#444 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#445 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#446 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#447 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#448 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#449 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#450 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#451 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#452 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#453 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#454 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#455 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#456 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#457 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#458 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#459 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#460 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#461 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#462 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#463 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#464 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#465 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#466 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#467 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#468 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#469 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#470 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#471 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#472 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#473 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#474 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#475 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#476 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#477 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#478 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#479 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#480 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#481 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#482 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#483 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#484 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#485 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#486 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#487 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#488 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#489 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#490 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#491 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#492 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#493 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#494 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#495 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#496 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#497 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#498 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#499 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#500 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#501 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#502 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#503 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#504 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#505 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#506 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#507 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#508 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#509 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#510 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#511 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#512 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#513 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#514 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#515 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#516 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#517 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#518 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#519 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#520 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#521 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#522 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#523 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#524 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#525 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#526 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#527 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#528 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#529 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#530 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#531 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#532 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#533 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#534 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#535 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#536 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#537 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#538 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#539 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#540 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#541 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#542 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#543 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#544 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#545 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#546 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#547 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#548 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#549 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#550 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#551 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#552 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#553 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#554 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#555 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#556 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#557 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#558 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#559 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#560 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#561 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#562 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#563 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#564 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#565 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#566 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#567 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#568 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#569 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#570 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#571 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#572 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#573 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#574 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#575 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#576 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#577 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#578 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#579 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#580 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#581 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#582 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#583 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#584 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#585 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#586 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#587 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#588 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#589 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#590 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#591 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#592 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#593 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#594 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#595 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#596 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#597 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#598 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#599 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#600 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#601 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#602 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#603 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#604 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#605 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#606 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#607 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#608 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#609 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#610 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#611 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#612 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#613 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#614 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#615 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#616 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#617 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#618 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#619 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#620 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#621 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#622 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#623 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#624 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#625 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#626 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#627 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#628 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#629 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#630 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#631 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#632 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#633 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#634 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#635 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#636 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#637 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#638 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#639 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#640 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#641 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#642 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#643 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#644 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#645 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#646 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#647 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#648 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#649 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#650 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#651 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#652 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#653 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#654 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#655 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#656 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#657 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#658 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#659 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#660 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#661 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#662 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#663 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#664 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#665 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#666 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#667 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#668 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#669 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#670 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#671 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#672 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#673 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#674 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#675 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#676 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#677 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#678 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#679 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#680 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#681 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#682 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#683 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#684 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#685 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#686 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#687 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#688 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#689 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#690 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#691 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#692 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#693 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#694 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#695 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#696 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#697 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#698 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#699 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#700 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#701 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#702 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#703 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#704 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#705 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#706 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#707 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#708 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#709 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#710 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#711 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#712 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#713 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#714 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#715 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#716 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#717 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#718 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#719 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#720 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#721 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#722 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#723 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#724 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#725 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#726 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#727 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#728 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#729 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#730 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#731 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#732 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#733 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#734 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#735 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#736 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#737 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#738 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#739 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#740 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#741 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#742 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#743 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#744 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#745 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#746 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#747 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#748 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#749 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#750 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#751 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#752 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#753 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#754 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#755 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#756 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#757 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#758 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#759 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#760 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#761 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#762 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#763 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#764 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#765 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#766 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#767 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#768 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#769 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#770 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#771 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#772 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#773 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#774 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#775 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#776 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#777 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#778 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#779 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#780 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#781 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#782 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#783 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#784 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#785 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#786 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#787 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#788 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#789 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#790 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#791 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#792 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#793 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#794 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#795 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#796 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#797 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#798 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#799 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#800 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#801 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#802 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#803 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#804 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#805 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#806 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#807 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#808 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#809 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#810 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#811 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#812 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#813 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#814 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#815 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#816 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#817 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#818 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#819 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#820 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#821 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#822 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#823 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#824 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#825 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#826 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#827 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#828 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#829 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#830 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#831 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#832 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#833 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#834 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#835 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#836 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#837 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#838 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#839 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#840 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#841 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#842 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#843 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#844 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#845 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#846 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#847 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#848 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#849 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#850 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#851 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#852 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#853 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#854 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#855 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#856 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#857 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#858 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#859 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#860 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#861 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#862 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#863 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#864 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#865 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#866 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#867 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#868 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#869 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#870 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#871 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#872 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#873 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#874 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#875 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#876 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#877 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#878 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#879 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#880 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#881 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#882 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#883 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#884 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#885 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#886 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#887 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#888 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#889 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#890 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#891 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#892 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#893 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#894 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#895 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#896 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#897 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#898 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#899 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#900 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#901 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#902 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#903 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#904 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#905 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#906 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#907 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#908 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#909 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#910 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#911 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#912 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#913 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#914 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#915 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#916 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#917 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#918 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#919 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#920 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#921 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#922 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#923 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#924 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#925 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#926 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#927 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#928 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#929 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#930 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#931 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#932 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#933 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#934 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#935 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#936 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#937 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#938 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#939 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#940 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#941 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#942 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#943 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#944 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#945 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#946 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#947 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#948 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#949 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#950 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#951 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#952 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#953 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#954 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#955 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#956 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#957 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#958 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#959 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#960 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#961 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#962 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#963 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#964 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#965 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#966 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#967 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#968 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#969 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#970 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#971 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#972 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#973 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#974 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#975 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#976 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#977 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#978 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#979 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#980 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#981 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#982 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#983 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#984 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#985 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#986 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#987 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#988 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#989 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#990 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#991 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#992 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#993 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#994 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#995 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#996 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#997 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#998 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#999 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1000 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1001 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1002 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1003 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1004 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1005 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1006 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1007 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1008 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1009 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1010 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1011 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1012 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1013 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1014 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1015 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1016 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1017 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1018 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1019 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1020 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1021 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1022 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1023 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1024 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1025 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1026 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1027 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1028 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1029 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1030 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1031 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1032 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1033 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1034 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1035 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1036 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1037 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1038 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1039 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1040 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1041 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1042 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1043 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1044 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1045 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1046 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1047 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1048 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1049 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1050 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1051 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1052 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1053 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1054 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1055 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1056 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1057 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1058 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1059 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1060 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1061 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1062 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1063 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1064 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1065 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1066 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1067 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1068 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_dequant_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1069 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1070 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[0].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1071 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/PATTERNDETECT is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1072 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_scale_mult/inst/i_synth/MULT.OP/i_non_prim.MULT/MULT_GEN_VARIANT.FIX_MULT/MULT/gDSP.gDSP_only.iDSP/use_prim.appDSP[0].bppDSP[1].use_dsp.use_dsp48e2.iDSP48E2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1073 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1074 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__0 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1075 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__1 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1076 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__10 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1077 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__11 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1078 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__12 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1079 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__13 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1080 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__14 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1081 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__15 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1082 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__16 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1083 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__17 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1084 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__18 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1085 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__19 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1086 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__2 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1087 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__20 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1088 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__21 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1089 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__22 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1090 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__23 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1091 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__24 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1092 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__25 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1093 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__26 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1094 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__27 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1095 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__28 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1096 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__29 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1097 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__3 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1098 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__30 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1099 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__31 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1100 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__32 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1101 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__33 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1102 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__34 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1103 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__35 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1104 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__36 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1105 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__37 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1106 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__38 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1107 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__39 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1108 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__4 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1109 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__40 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1110 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__41 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1111 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__42 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1112 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__43 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1113 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__44 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1114 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__45 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1115 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__46 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1116 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__47 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__47/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1117 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__48 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1118 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__49 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__49/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1119 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__5 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1120 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__50 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1121 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__51 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1122 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__52 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1123 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__53 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__53/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1124 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__54 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1125 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__55 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__55/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1126 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__56 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1127 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__57 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1128 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__58 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__58/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1129 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__59 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__59/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1130 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__6 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1131 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__60 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__60/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1132 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__61 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__61/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1133 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__62 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__62/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1134 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__7 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1135 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__8 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#1136 Warning
MREG Output pipelining  
DSP accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__9 multiplier stage accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/xw_q_buf0__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPREG-7#1 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-7#2 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-7#3 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-7#4 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-7#5 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-7#6 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-7#7 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-7#8 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-7#9 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-7#10 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-7#11 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-7#12 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-7#13 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-7#14 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-7#15 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-7#16 Warning
DSP48E2_PregDynOpmodeZmuxP:  
The DSP48E2 cell accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.ALIGN_ADD/DSP2/i_no_versal_es1_workaround.DSP with the given dynamic OPMODE[8:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

REQP-1935#1 Warning
RAMB36E2_nochange_collision_advisory  
Synchronous clocking is detected for BRAM (accelerate_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

AVAL-155#1 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[0].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-155#2 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[10].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-155#3 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[11].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-155#4 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[12].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-155#5 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[13].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-155#6 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[14].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-155#7 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[15].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-155#8 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[1].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-155#9 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[2].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-155#10 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[3].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-155#11 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[4].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-155#12 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[5].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-155#13 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[6].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-155#14 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[7].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-155#15 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[8].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-155#16 Advisory
enum_AMULTSEL_BMULTSEL_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
accelerate_i/gemv_float_q8_0/inst/gemv_float_q8_v1_0_M00_AXIS_SEND_inst/matmul_gen[9].u_matmul/u_float_add/inst/i_synth/ADDSUB_OP.ADDSUB/DSP.OP/DSP48E1_BODY.NORM_RND/FULL_USAGE_DSP.SHIFT_RND/i_no_versal_es1_workaround.DSP: DSP48E2 is not using the D port (AMULTSEL = A and BMULTSEL = B). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>


