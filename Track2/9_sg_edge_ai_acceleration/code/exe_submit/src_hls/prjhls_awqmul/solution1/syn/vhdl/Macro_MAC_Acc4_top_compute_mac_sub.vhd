-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Macro_MAC_Acc4_top_compute_mac_sub is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    xi_s_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    xi_s_0_empty_n : IN STD_LOGIC;
    xi_s_0_read : OUT STD_LOGIC;
    mro_s_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mro_s_0_empty_n : IN STD_LOGIC;
    mro_s_0_read : OUT STD_LOGIC;
    qzeros_0_val : IN STD_LOGIC_VECTOR (3 downto 0);
    qzeros_1_val : IN STD_LOGIC_VECTOR (3 downto 0);
    qzeros_2_val : IN STD_LOGIC_VECTOR (3 downto 0);
    qzeros_3_val : IN STD_LOGIC_VECTOR (3 downto 0);
    qzeros_4_val : IN STD_LOGIC_VECTOR (3 downto 0);
    qzeros_5_val : IN STD_LOGIC_VECTOR (3 downto 0);
    qzeros_6_val : IN STD_LOGIC_VECTOR (3 downto 0);
    qzeros_7_val : IN STD_LOGIC_VECTOR (3 downto 0);
    qscale_0_val : IN STD_LOGIC_VECTOR (31 downto 0);
    qscale_1_val : IN STD_LOGIC_VECTOR (31 downto 0);
    qscale_2_val : IN STD_LOGIC_VECTOR (31 downto 0);
    qscale_3_val : IN STD_LOGIC_VECTOR (31 downto 0);
    qscale_4_val : IN STD_LOGIC_VECTOR (31 downto 0);
    qscale_5_val : IN STD_LOGIC_VECTOR (31 downto 0);
    qscale_6_val : IN STD_LOGIC_VECTOR (31 downto 0);
    qscale_7_val : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Macro_MAC_Acc4_top_compute_mac_sub is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal icmp_ln194_reg_826 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage4 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal xi_s_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_grp2 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone_grp2_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage1_subdone_grp2 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal mro_s_0_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage1_grp1 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone_grp1_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage1_subdone_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal conv3_i13_i_fu_270_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv3_i13_i_reg_786 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv3_i13_i_1_fu_274_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv3_i13_i_1_reg_791 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv3_i13_i_2_fu_278_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv3_i13_i_2_reg_796 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv3_i13_i_3_fu_282_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv3_i13_i_3_reg_801 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv3_i13_i_4_fu_286_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv3_i13_i_4_reg_806 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv3_i13_i_5_fu_290_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv3_i13_i_5_reg_811 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv3_i13_i_6_fu_294_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv3_i13_i_6_reg_816 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv3_i13_i_7_fu_298_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv3_i13_i_7_reg_821 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln194_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln194_reg_826_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln194_reg_826_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln194_reg_826_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xi_val_reg_830 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2_pp0_stage1_iter0_grp2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_grp2 : BOOLEAN;
    signal w_ubias_fu_431_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ubias_reg_838 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state2_pp0_stage1_iter0_grp1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_grp1 : BOOLEAN;
    signal w_ubias_1_fu_440_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ubias_1_reg_843 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ubias_2_fu_449_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ubias_2_reg_848 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ubias_3_fu_458_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ubias_3_reg_853 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ubias_4_fu_467_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ubias_4_reg_858 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ubias_5_fu_476_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ubias_5_reg_863 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ubias_6_fu_485_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ubias_6_reg_868 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ubias_7_fu_494_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ubias_7_reg_873 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln216_fu_499_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal sext_ln216_1_fu_503_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln216_2_fu_507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal sext_ln216_3_fu_511_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln216_4_fu_515_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal sext_ln216_5_fu_519_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln216_6_fu_523_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln216_7_fu_527_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_248_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_918 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage1_subdone_grp0 : BOOLEAN;
    signal grp_fu_252_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_923 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_256_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_928 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_260_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_933 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_938 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_5_reg_943 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_6_reg_948 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_7_reg_953 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_264_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_reg_958 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_267_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_reg_963 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_2_reg_968 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_3_reg_973 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_4_reg_978 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_5_reg_983 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_6_reg_988 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_7_reg_993 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul1_reg_998 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul20_1_reg_1003 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul20_2_reg_1008 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul20_3_reg_1013 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul20_4_reg_1028 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul20_5_reg_1033 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul20_6_reg_1048 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul20_7_reg_1053 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal m_fu_96 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal m_2_fu_356_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_m_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal pout_temp_0_0_fu_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal grp_fu_240_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_pout_temp_0_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter3_stage2 : STD_LOGIC;
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal pout_temp_1_0_fu_104 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal grp_fu_244_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_pout_temp_1_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_2_0_fu_108 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_sig_allocacmp_pout_temp_2_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_3_0_fu_112 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_sig_allocacmp_pout_temp_3_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_4_0_fu_116 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_sig_allocacmp_pout_temp_4_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_grp0 : BOOLEAN;
    signal pout_temp_5_0_fu_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_sig_allocacmp_pout_temp_5_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_6_0_fu_124 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_sig_allocacmp_pout_temp_6_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_pout_temp_6_0_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_7_0_fu_128 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_sig_allocacmp_pout_temp_7_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_pout_temp_7_0_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_240_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_240_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_244_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_244_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_248_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_248_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal grp_fu_252_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_252_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_256_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_256_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_260_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_260_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_264_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_267_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln98_fu_367_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln215_fu_427_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_fu_371_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln215_1_fu_436_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_fu_379_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln215_2_fu_445_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_387_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln215_3_fu_454_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_395_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln215_4_fu_463_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_fu_403_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln215_5_fu_472_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_fu_411_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln215_6_fu_481_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_fu_419_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln215_7_fu_490_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_240_ce : STD_LOGIC;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal grp_fu_244_ce : STD_LOGIC;
    signal grp_fu_248_ce : STD_LOGIC;
    signal grp_fu_252_ce : STD_LOGIC;
    signal grp_fu_256_ce : STD_LOGIC;
    signal grp_fu_260_ce : STD_LOGIC;
    signal grp_fu_264_ce : STD_LOGIC;
    signal grp_fu_267_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to4 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Macro_MAC_Acc4_top_fadd_32ns_32ns_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Macro_MAC_Acc4_top_fmul_32ns_32ns_32_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Macro_MAC_Acc4_top_sitofp_32s_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Macro_MAC_Acc4_top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fadd_32ns_32ns_32_6_no_dsp_1_U158 : component Macro_MAC_Acc4_top_fadd_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_240_p0,
        din1 => grp_fu_240_p1,
        ce => grp_fu_240_ce,
        dout => grp_fu_240_p2);

    fadd_32ns_32ns_32_6_no_dsp_1_U159 : component Macro_MAC_Acc4_top_fadd_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_244_p0,
        din1 => grp_fu_244_p1,
        ce => grp_fu_244_ce,
        dout => grp_fu_244_p2);

    fmul_32ns_32ns_32_5_max_dsp_1_U160 : component Macro_MAC_Acc4_top_fmul_32ns_32ns_32_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_248_p0,
        din1 => grp_fu_248_p1,
        ce => grp_fu_248_ce,
        dout => grp_fu_248_p2);

    fmul_32ns_32ns_32_5_max_dsp_1_U161 : component Macro_MAC_Acc4_top_fmul_32ns_32ns_32_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_252_p0,
        din1 => grp_fu_252_p1,
        ce => grp_fu_252_ce,
        dout => grp_fu_252_p2);

    fmul_32ns_32ns_32_5_max_dsp_1_U162 : component Macro_MAC_Acc4_top_fmul_32ns_32ns_32_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_256_p0,
        din1 => grp_fu_256_p1,
        ce => grp_fu_256_ce,
        dout => grp_fu_256_p2);

    fmul_32ns_32ns_32_5_max_dsp_1_U163 : component Macro_MAC_Acc4_top_fmul_32ns_32ns_32_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_260_p0,
        din1 => grp_fu_260_p1,
        ce => grp_fu_260_ce,
        dout => grp_fu_260_p2);

    sitofp_32s_32_6_no_dsp_1_U164 : component Macro_MAC_Acc4_top_sitofp_32s_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_264_p0,
        ce => grp_fu_264_ce,
        dout => grp_fu_264_p1);

    sitofp_32s_32_6_no_dsp_1_U165 : component Macro_MAC_Acc4_top_sitofp_32s_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_267_p0,
        ce => grp_fu_267_ce,
        dout => grp_fu_267_p1);

    flow_control_loop_pipe_sequential_init_U : component Macro_MAC_Acc4_top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage4,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_block_pp0_stage1_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage1_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then 
                        ap_block_pp0_stage1_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0)) then 
                        ap_block_pp0_stage1_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage1_subdone_grp1_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage1_subdone_grp1_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then 
                        ap_block_pp0_stage1_subdone_grp1_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1)) then 
                        ap_block_pp0_stage1_subdone_grp1_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage1_subdone_grp2_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage1_subdone_grp2_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then 
                        ap_block_pp0_stage1_subdone_grp2_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp2)) then 
                        ap_block_pp0_stage1_subdone_grp2_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage4)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage2))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage2))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage2))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    m_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln194_fu_350_p2 = ap_const_lv1_0))) then 
                    m_fu_96 <= m_2_fu_356_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    m_fu_96 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    pout_temp_0_0_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                pout_temp_0_0_fu_100 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                pout_temp_0_0_fu_100 <= grp_fu_240_p2;
            end if; 
        end if;
    end process;

    pout_temp_1_0_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                pout_temp_1_0_fu_104 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                pout_temp_1_0_fu_104 <= grp_fu_244_p2;
            end if; 
        end if;
    end process;

    pout_temp_2_0_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pout_temp_2_0_fu_108 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    pout_temp_2_0_fu_108 <= grp_fu_240_p2;
                end if;
            end if; 
        end if;
    end process;

    pout_temp_3_0_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pout_temp_3_0_fu_112 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    pout_temp_3_0_fu_112 <= grp_fu_244_p2;
                end if;
            end if; 
        end if;
    end process;

    pout_temp_4_0_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                pout_temp_4_0_fu_116 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                pout_temp_4_0_fu_116 <= grp_fu_240_p2;
            end if; 
        end if;
    end process;

    pout_temp_5_0_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                pout_temp_5_0_fu_120 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                pout_temp_5_0_fu_120 <= grp_fu_244_p2;
            end if; 
        end if;
    end process;

    pout_temp_6_0_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                pout_temp_6_0_fu_124 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                pout_temp_6_0_fu_124 <= grp_fu_240_p2;
            end if; 
        end if;
    end process;

    pout_temp_7_0_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                pout_temp_7_0_fu_128 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                pout_temp_7_0_fu_128 <= grp_fu_244_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    conv3_i13_i_1_reg_791(3 downto 0) <= conv3_i13_i_1_fu_274_p1(3 downto 0);
                    conv3_i13_i_2_reg_796(3 downto 0) <= conv3_i13_i_2_fu_278_p1(3 downto 0);
                    conv3_i13_i_3_reg_801(3 downto 0) <= conv3_i13_i_3_fu_282_p1(3 downto 0);
                    conv3_i13_i_4_reg_806(3 downto 0) <= conv3_i13_i_4_fu_286_p1(3 downto 0);
                    conv3_i13_i_5_reg_811(3 downto 0) <= conv3_i13_i_5_fu_290_p1(3 downto 0);
                    conv3_i13_i_6_reg_816(3 downto 0) <= conv3_i13_i_6_fu_294_p1(3 downto 0);
                    conv3_i13_i_7_reg_821(3 downto 0) <= conv3_i13_i_7_fu_298_p1(3 downto 0);
                    conv3_i13_i_reg_786(3 downto 0) <= conv3_i13_i_fu_270_p1(3 downto 0);
                icmp_ln194_reg_826 <= icmp_ln194_fu_350_p2;
                icmp_ln194_reg_826_pp0_iter1_reg <= icmp_ln194_reg_826;
                icmp_ln194_reg_826_pp0_iter2_reg <= icmp_ln194_reg_826_pp0_iter1_reg;
                icmp_ln194_reg_826_pp0_iter3_reg <= icmp_ln194_reg_826_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                conv_1_reg_963 <= grp_fu_267_p1;
                conv_reg_958 <= grp_fu_264_p1;
                mul_4_reg_938 <= grp_fu_248_p2;
                mul_5_reg_943 <= grp_fu_252_p2;
                mul_6_reg_948 <= grp_fu_256_p2;
                mul_7_reg_953 <= grp_fu_260_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                conv_2_reg_968 <= grp_fu_264_p1;
                conv_3_reg_973 <= grp_fu_267_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                conv_4_reg_978 <= grp_fu_264_p1;
                conv_5_reg_983 <= grp_fu_267_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                conv_6_reg_988 <= grp_fu_264_p1;
                conv_7_reg_993 <= grp_fu_267_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul1_reg_998 <= grp_fu_248_p2;
                mul20_1_reg_1003 <= grp_fu_252_p2;
                mul20_2_reg_1008 <= grp_fu_256_p2;
                mul20_3_reg_1013 <= grp_fu_260_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul20_4_reg_1028 <= grp_fu_248_p2;
                mul20_5_reg_1033 <= grp_fu_252_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul20_6_reg_1048 <= grp_fu_248_p2;
                mul20_7_reg_1053 <= grp_fu_252_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul_1_reg_923 <= grp_fu_252_p2;
                mul_2_reg_928 <= grp_fu_256_p2;
                mul_3_reg_933 <= grp_fu_260_p2;
                mul_reg_918 <= grp_fu_248_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1_done_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                w_ubias_1_reg_843 <= w_ubias_1_fu_440_p2;
                w_ubias_2_reg_848 <= w_ubias_2_fu_449_p2;
                w_ubias_3_reg_853 <= w_ubias_3_fu_458_p2;
                w_ubias_4_reg_858 <= w_ubias_4_fu_467_p2;
                w_ubias_5_reg_863 <= w_ubias_5_fu_476_p2;
                w_ubias_6_reg_868 <= w_ubias_6_fu_485_p2;
                w_ubias_7_reg_873 <= w_ubias_7_fu_494_p2;
                w_ubias_reg_838 <= w_ubias_fu_431_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp2) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp2_done_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                xi_val_reg_830 <= xi_s_0_dout;
            end if;
        end if;
    end process;
    conv3_i13_i_reg_786(4) <= '0';
    conv3_i13_i_1_reg_791(4) <= '0';
    conv3_i13_i_2_reg_796(4) <= '0';
    conv3_i13_i_3_reg_801(4) <= '0';
    conv3_i13_i_4_reg_806(4) <= '0';
    conv3_i13_i_5_reg_811(4) <= '0';
    conv3_i13_i_6_reg_816(4) <= '0';
    conv3_i13_i_7_reg_821(4) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage4_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_condition_exit_pp0_iter3_stage2, ap_idle_pp0_0to2, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to4, ap_block_pp0_stage3_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to4 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage1_subdone_grp2_done_reg, ap_block_pp0_stage1_subdone_grp1_done_reg, ap_block_state2_pp0_stage1_iter0_grp2, ap_block_state2_pp0_stage1_iter0_grp1)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1_done_reg) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_grp2))));
    end process;

        ap_block_pp0_stage1_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_grp1_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage1_subdone_grp1_done_reg, ap_block_state2_pp0_stage1_iter0_grp1)
    begin
                ap_block_pp0_stage1_11001_grp1 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1_done_reg) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_grp1));
    end process;


    ap_block_pp0_stage1_11001_grp2_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage1_subdone_grp2_done_reg, ap_block_state2_pp0_stage1_iter0_grp2)
    begin
                ap_block_pp0_stage1_11001_grp2 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_grp2));
    end process;

        ap_block_pp0_stage1_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_grp2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage1_subdone_grp2_done_reg, ap_block_pp0_stage1_subdone_grp1_done_reg, ap_block_state2_pp0_stage1_iter0_grp2, ap_block_state2_pp0_stage1_iter0_grp1)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1_done_reg) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_grp2))));
    end process;

        ap_block_pp0_stage1_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_grp1_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage1_subdone_grp1_done_reg, ap_block_state2_pp0_stage1_iter0_grp1)
    begin
                ap_block_pp0_stage1_subdone_grp1 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1_done_reg) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_grp1));
    end process;


    ap_block_pp0_stage1_subdone_grp2_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage1_subdone_grp2_done_reg, ap_block_state2_pp0_stage1_iter0_grp2)
    begin
                ap_block_pp0_stage1_subdone_grp2 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_grp2));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage1_iter0_grp1_assign_proc : process(icmp_ln194_reg_826, mro_s_0_empty_n)
    begin
                ap_block_state2_pp0_stage1_iter0_grp1 <= ((mro_s_0_empty_n = ap_const_logic_0) and (icmp_ln194_reg_826 = ap_const_lv1_0));
    end process;


    ap_block_state2_pp0_stage1_iter0_grp2_assign_proc : process(icmp_ln194_reg_826, xi_s_0_empty_n)
    begin
                ap_block_state2_pp0_stage1_iter0_grp2 <= ((xi_s_0_empty_n = ap_const_logic_0) and (icmp_ln194_reg_826 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage4_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone, ap_enable_reg_pp0_iter0_reg, icmp_ln194_reg_826)
    begin
        if (((icmp_ln194_reg_826 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter3_stage2_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln194_reg_826_pp0_iter3_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln194_reg_826_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter3_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter3_stage2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_loop_exit_ready_pp0_iter3_reg, ap_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to4 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage4;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone, ap_enable_reg_pp0_iter0_reg)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= pout_temp_0_0_fu_100;
    ap_return_1 <= pout_temp_1_0_fu_104;
    ap_return_2 <= pout_temp_2_0_fu_108;
    ap_return_3 <= pout_temp_3_0_fu_112;
    ap_return_4 <= pout_temp_4_0_fu_116;
    ap_return_5 <= pout_temp_5_0_fu_120;
    ap_return_6 <= ap_sig_allocacmp_pout_temp_6_0_load_1;
    ap_return_7 <= ap_sig_allocacmp_pout_temp_7_0_load_1;

    ap_sig_allocacmp_m_1_assign_proc : process(ap_CS_fsm_pp0_stage0, m_fu_96, ap_loop_init, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_m_1 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_m_1 <= m_fu_96;
        end if; 
    end process;


    ap_sig_allocacmp_pout_temp_0_0_load_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage4, pout_temp_0_0_fu_100, grp_fu_240_p2, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_pout_temp_0_0_load <= grp_fu_240_p2;
        else 
            ap_sig_allocacmp_pout_temp_0_0_load <= pout_temp_0_0_fu_100;
        end if; 
    end process;


    ap_sig_allocacmp_pout_temp_1_0_load_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, pout_temp_1_0_fu_104, grp_fu_244_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_pout_temp_1_0_load <= grp_fu_244_p2;
        else 
            ap_sig_allocacmp_pout_temp_1_0_load <= pout_temp_1_0_fu_104;
        end if; 
    end process;


    ap_sig_allocacmp_pout_temp_2_0_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, grp_fu_240_p2, pout_temp_2_0_fu_108)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_pout_temp_2_0_load <= grp_fu_240_p2;
        else 
            ap_sig_allocacmp_pout_temp_2_0_load <= pout_temp_2_0_fu_108;
        end if; 
    end process;


    ap_sig_allocacmp_pout_temp_3_0_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, grp_fu_244_p2, pout_temp_3_0_fu_112)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_pout_temp_3_0_load <= grp_fu_244_p2;
        else 
            ap_sig_allocacmp_pout_temp_3_0_load <= pout_temp_3_0_fu_112;
        end if; 
    end process;


    ap_sig_allocacmp_pout_temp_4_0_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, grp_fu_240_p2, pout_temp_4_0_fu_116, ap_block_pp0_stage1_grp0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_pout_temp_4_0_load <= grp_fu_240_p2;
        else 
            ap_sig_allocacmp_pout_temp_4_0_load <= pout_temp_4_0_fu_116;
        end if; 
    end process;


    ap_sig_allocacmp_pout_temp_5_0_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, grp_fu_244_p2, ap_block_pp0_stage1_grp0, pout_temp_5_0_fu_120)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_pout_temp_5_0_load <= grp_fu_244_p2;
        else 
            ap_sig_allocacmp_pout_temp_5_0_load <= pout_temp_5_0_fu_120;
        end if; 
    end process;


    ap_sig_allocacmp_pout_temp_6_0_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, grp_fu_240_p2, ap_block_pp0_stage2, pout_temp_6_0_fu_124)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_pout_temp_6_0_load <= grp_fu_240_p2;
        else 
            ap_sig_allocacmp_pout_temp_6_0_load <= pout_temp_6_0_fu_124;
        end if; 
    end process;


    ap_sig_allocacmp_pout_temp_6_0_load_1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, grp_fu_240_p2, ap_block_pp0_stage2, pout_temp_6_0_fu_124)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_pout_temp_6_0_load_1 <= grp_fu_240_p2;
        else 
            ap_sig_allocacmp_pout_temp_6_0_load_1 <= pout_temp_6_0_fu_124;
        end if; 
    end process;


    ap_sig_allocacmp_pout_temp_7_0_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, grp_fu_244_p2, pout_temp_7_0_fu_128)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_pout_temp_7_0_load <= grp_fu_244_p2;
        else 
            ap_sig_allocacmp_pout_temp_7_0_load <= pout_temp_7_0_fu_128;
        end if; 
    end process;


    ap_sig_allocacmp_pout_temp_7_0_load_1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, grp_fu_244_p2, pout_temp_7_0_fu_128)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_pout_temp_7_0_load_1 <= grp_fu_244_p2;
        else 
            ap_sig_allocacmp_pout_temp_7_0_load_1 <= pout_temp_7_0_fu_128;
        end if; 
    end process;

    conv3_i13_i_1_fu_274_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qzeros_1_val),5));
    conv3_i13_i_2_fu_278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qzeros_2_val),5));
    conv3_i13_i_3_fu_282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qzeros_3_val),5));
    conv3_i13_i_4_fu_286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qzeros_4_val),5));
    conv3_i13_i_5_fu_290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qzeros_5_val),5));
    conv3_i13_i_6_fu_294_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qzeros_6_val),5));
    conv3_i13_i_7_fu_298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qzeros_7_val),5));
    conv3_i13_i_fu_270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qzeros_0_val),5));

    grp_fu_240_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_240_ce <= ap_const_logic_1;
        else 
            grp_fu_240_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_240_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_sig_allocacmp_pout_temp_0_0_load, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_sig_allocacmp_pout_temp_2_0_load, ap_sig_allocacmp_pout_temp_4_0_load, ap_block_pp0_stage1_grp0, ap_sig_allocacmp_pout_temp_6_0_load)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_240_p0 <= ap_sig_allocacmp_pout_temp_6_0_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_240_p0 <= ap_sig_allocacmp_pout_temp_4_0_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_240_p0 <= ap_sig_allocacmp_pout_temp_2_0_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_240_p0 <= ap_sig_allocacmp_pout_temp_0_0_load;
        else 
            grp_fu_240_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_240_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul1_reg_998, mul20_2_reg_1008, mul20_4_reg_1028, mul20_6_reg_1048, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1_grp0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_240_p1 <= mul20_6_reg_1048;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_240_p1 <= mul20_4_reg_1028;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_240_p1 <= mul20_2_reg_1008;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_240_p1 <= mul1_reg_998;
        else 
            grp_fu_240_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_244_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_244_ce <= ap_const_logic_1;
        else 
            grp_fu_244_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_244_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_sig_allocacmp_pout_temp_1_0_load, ap_sig_allocacmp_pout_temp_3_0_load, ap_block_pp0_stage1_grp0, ap_sig_allocacmp_pout_temp_5_0_load, ap_sig_allocacmp_pout_temp_7_0_load)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_244_p0 <= ap_sig_allocacmp_pout_temp_7_0_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_244_p0 <= ap_sig_allocacmp_pout_temp_5_0_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_244_p0 <= ap_sig_allocacmp_pout_temp_3_0_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_244_p0 <= ap_sig_allocacmp_pout_temp_1_0_load;
        else 
            grp_fu_244_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_244_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul20_1_reg_1003, mul20_3_reg_1013, mul20_5_reg_1033, mul20_7_reg_1053, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1_grp0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_244_p1 <= mul20_7_reg_1053;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_244_p1 <= mul20_5_reg_1033;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_244_p1 <= mul20_3_reg_1013;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_244_p1 <= mul20_1_reg_1003;
        else 
            grp_fu_244_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_248_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_248_ce <= ap_const_logic_1;
        else 
            grp_fu_248_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_248_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, xi_val_reg_830, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, mul_reg_918, mul_4_reg_938, mul_6_reg_948, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1_grp0, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_248_p0 <= mul_6_reg_948;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_248_p0 <= mul_4_reg_938;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_248_p0 <= mul_reg_918;
        elsif ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_248_p0 <= xi_val_reg_830;
        else 
            grp_fu_248_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_248_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0_reg, qscale_0_val, qscale_4_val, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, conv_reg_958, conv_4_reg_978, conv_6_reg_988, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1_grp0, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_248_p1 <= conv_6_reg_988;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_248_p1 <= conv_4_reg_978;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_248_p1 <= conv_reg_958;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_248_p1 <= qscale_4_val;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_248_p1 <= qscale_0_val;
        else 
            grp_fu_248_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_252_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_252_ce <= ap_const_logic_1;
        else 
            grp_fu_252_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_252_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, xi_val_reg_830, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, mul_1_reg_923, mul_5_reg_943, mul_7_reg_953, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1_grp0, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_252_p0 <= mul_7_reg_953;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_252_p0 <= mul_5_reg_943;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_252_p0 <= mul_1_reg_923;
        elsif ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_252_p0 <= xi_val_reg_830;
        else 
            grp_fu_252_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_252_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0_reg, qscale_1_val, qscale_5_val, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, conv_1_reg_963, conv_5_reg_983, conv_7_reg_993, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1_grp0, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_252_p1 <= conv_7_reg_993;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_252_p1 <= conv_5_reg_983;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_252_p1 <= conv_1_reg_963;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_252_p1 <= qscale_5_val;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_252_p1 <= qscale_1_val;
        else 
            grp_fu_252_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_256_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_256_ce <= ap_const_logic_1;
        else 
            grp_fu_256_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_256_p0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0_reg, xi_val_reg_830, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, mul_2_reg_928, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_256_p0 <= mul_2_reg_928;
        elsif ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_256_p0 <= xi_val_reg_830;
        else 
            grp_fu_256_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_256_p1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0_reg, qscale_2_val, qscale_6_val, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, conv_2_reg_968, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_256_p1 <= conv_2_reg_968;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_256_p1 <= qscale_6_val;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_256_p1 <= qscale_2_val;
        else 
            grp_fu_256_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_260_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_260_ce <= ap_const_logic_1;
        else 
            grp_fu_260_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_260_p0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0_reg, xi_val_reg_830, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, mul_3_reg_933, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_260_p0 <= mul_3_reg_933;
        elsif ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_260_p0 <= xi_val_reg_830;
        else 
            grp_fu_260_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_260_p1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0_reg, qscale_3_val, qscale_7_val, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, conv_3_reg_973, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_260_p1 <= conv_3_reg_973;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_260_p1 <= qscale_7_val;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_260_p1 <= qscale_3_val;
        else 
            grp_fu_260_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_264_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_264_ce <= ap_const_logic_1;
        else 
            grp_fu_264_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_264_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0_reg, sext_ln216_fu_499_p1, ap_CS_fsm_pp0_stage2, sext_ln216_2_fu_507_p1, ap_CS_fsm_pp0_stage3, sext_ln216_4_fu_515_p1, sext_ln216_6_fu_523_p1, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_264_p0 <= sext_ln216_6_fu_523_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_264_p0 <= sext_ln216_4_fu_515_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_264_p0 <= sext_ln216_2_fu_507_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_264_p0 <= sext_ln216_fu_499_p1;
        else 
            grp_fu_264_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_267_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_267_ce <= ap_const_logic_1;
        else 
            grp_fu_267_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_267_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage2, sext_ln216_1_fu_503_p1, ap_CS_fsm_pp0_stage3, sext_ln216_3_fu_511_p1, sext_ln216_5_fu_519_p1, sext_ln216_7_fu_527_p1, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_267_p0 <= sext_ln216_7_fu_527_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_267_p0 <= sext_ln216_5_fu_519_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_267_p0 <= sext_ln216_3_fu_511_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_267_p0 <= sext_ln216_1_fu_503_p1;
        else 
            grp_fu_267_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln194_fu_350_p2 <= "1" when (ap_sig_allocacmp_m_1 = ap_const_lv4_8) else "0";
    m_2_fu_356_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_m_1) + unsigned(ap_const_lv4_1));

    mro_s_0_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0_reg, icmp_ln194_reg_826, mro_s_0_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp1, ap_block_pp0_stage1_subdone_grp1_done_reg)
    begin
        if (((icmp_ln194_reg_826 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            mro_s_0_blk_n <= mro_s_0_empty_n;
        else 
            mro_s_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    mro_s_0_read_assign_proc : process(ap_enable_reg_pp0_iter0_reg, icmp_ln194_reg_826, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone_grp1_done_reg, ap_block_pp0_stage1_11001_grp1)
    begin
        if (((icmp_ln194_reg_826 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1_done_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            mro_s_0_read <= ap_const_logic_1;
        else 
            mro_s_0_read <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln216_1_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w_ubias_1_reg_843),32));

        sext_ln216_2_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w_ubias_2_reg_848),32));

        sext_ln216_3_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w_ubias_3_reg_853),32));

        sext_ln216_4_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w_ubias_4_reg_858),32));

        sext_ln216_5_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w_ubias_5_reg_863),32));

        sext_ln216_6_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w_ubias_6_reg_868),32));

        sext_ln216_7_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w_ubias_7_reg_873),32));

        sext_ln216_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w_ubias_reg_838),32));

    tmp_1_fu_371_p3 <= mro_s_0_dout(19 downto 16);
    tmp_2_fu_379_p3 <= mro_s_0_dout(7 downto 4);
    tmp_3_fu_387_p3 <= mro_s_0_dout(23 downto 20);
    tmp_4_fu_395_p3 <= mro_s_0_dout(11 downto 8);
    tmp_5_fu_403_p3 <= mro_s_0_dout(27 downto 24);
    tmp_6_fu_411_p3 <= mro_s_0_dout(15 downto 12);
    tmp_7_fu_419_p3 <= mro_s_0_dout(31 downto 28);
    trunc_ln98_fu_367_p1 <= mro_s_0_dout(4 - 1 downto 0);
    w_ubias_1_fu_440_p2 <= std_logic_vector(unsigned(zext_ln215_1_fu_436_p1) - unsigned(conv3_i13_i_1_reg_791));
    w_ubias_2_fu_449_p2 <= std_logic_vector(unsigned(zext_ln215_2_fu_445_p1) - unsigned(conv3_i13_i_2_reg_796));
    w_ubias_3_fu_458_p2 <= std_logic_vector(unsigned(zext_ln215_3_fu_454_p1) - unsigned(conv3_i13_i_3_reg_801));
    w_ubias_4_fu_467_p2 <= std_logic_vector(unsigned(zext_ln215_4_fu_463_p1) - unsigned(conv3_i13_i_4_reg_806));
    w_ubias_5_fu_476_p2 <= std_logic_vector(unsigned(zext_ln215_5_fu_472_p1) - unsigned(conv3_i13_i_5_reg_811));
    w_ubias_6_fu_485_p2 <= std_logic_vector(unsigned(zext_ln215_6_fu_481_p1) - unsigned(conv3_i13_i_6_reg_816));
    w_ubias_7_fu_494_p2 <= std_logic_vector(unsigned(zext_ln215_7_fu_490_p1) - unsigned(conv3_i13_i_7_reg_821));
    w_ubias_fu_431_p2 <= std_logic_vector(unsigned(zext_ln215_fu_427_p1) - unsigned(conv3_i13_i_reg_786));

    xi_s_0_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0_reg, icmp_ln194_reg_826, xi_s_0_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp2, ap_block_pp0_stage1_subdone_grp2_done_reg)
    begin
        if (((icmp_ln194_reg_826 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            xi_s_0_blk_n <= xi_s_0_empty_n;
        else 
            xi_s_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    xi_s_0_read_assign_proc : process(ap_enable_reg_pp0_iter0_reg, icmp_ln194_reg_826, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone_grp2_done_reg, ap_block_pp0_stage1_11001_grp2)
    begin
        if (((icmp_ln194_reg_826 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp2) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp2_done_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            xi_s_0_read <= ap_const_logic_1;
        else 
            xi_s_0_read <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln215_1_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_371_p3),5));
    zext_ln215_2_fu_445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_379_p3),5));
    zext_ln215_3_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_387_p3),5));
    zext_ln215_4_fu_463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_395_p3),5));
    zext_ln215_5_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_403_p3),5));
    zext_ln215_6_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_411_p3),5));
    zext_ln215_7_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_419_p3),5));
    zext_ln215_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln98_fu_367_p1),5));
end behav;
