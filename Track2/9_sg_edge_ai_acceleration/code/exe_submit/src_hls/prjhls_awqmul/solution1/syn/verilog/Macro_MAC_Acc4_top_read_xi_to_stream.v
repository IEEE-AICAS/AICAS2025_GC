// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Macro_MAC_Acc4_top_read_xi_to_stream (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        xi0_s_M_elems_V_0_din,
        xi0_s_M_elems_V_0_full_n,
        xi0_s_M_elems_V_0_write,
        xi0_s_M_elems_V_4_din,
        xi0_s_M_elems_V_4_full_n,
        xi0_s_M_elems_V_4_write,
        xi1_s_M_elems_V_0_din,
        xi1_s_M_elems_V_0_full_n,
        xi1_s_M_elems_V_0_write,
        xi1_s_M_elems_V_4_din,
        xi1_s_M_elems_V_4_full_n,
        xi1_s_M_elems_V_4_write,
        xi2_s_M_elems_V_0_din,
        xi2_s_M_elems_V_0_full_n,
        xi2_s_M_elems_V_0_write,
        xi2_s_M_elems_V_4_din,
        xi2_s_M_elems_V_4_full_n,
        xi2_s_M_elems_V_4_write,
        xi3_s_M_elems_V_0_din,
        xi3_s_M_elems_V_0_full_n,
        xi3_s_M_elems_V_0_write,
        xi3_s_M_elems_V_4_din,
        xi3_s_M_elems_V_4_full_n,
        xi3_s_M_elems_V_4_write,
        xi0_s_M_elems_V_1_din,
        xi0_s_M_elems_V_1_full_n,
        xi0_s_M_elems_V_1_write,
        xi0_s_M_elems_V_5_din,
        xi0_s_M_elems_V_5_full_n,
        xi0_s_M_elems_V_5_write,
        xi1_s_M_elems_V_1_din,
        xi1_s_M_elems_V_1_full_n,
        xi1_s_M_elems_V_1_write,
        xi1_s_M_elems_V_5_din,
        xi1_s_M_elems_V_5_full_n,
        xi1_s_M_elems_V_5_write,
        xi2_s_M_elems_V_1_din,
        xi2_s_M_elems_V_1_full_n,
        xi2_s_M_elems_V_1_write,
        xi2_s_M_elems_V_5_din,
        xi2_s_M_elems_V_5_full_n,
        xi2_s_M_elems_V_5_write,
        xi3_s_M_elems_V_1_din,
        xi3_s_M_elems_V_1_full_n,
        xi3_s_M_elems_V_1_write,
        xi3_s_M_elems_V_5_din,
        xi3_s_M_elems_V_5_full_n,
        xi3_s_M_elems_V_5_write,
        xi0_s_M_elems_V_2_din,
        xi0_s_M_elems_V_2_full_n,
        xi0_s_M_elems_V_2_write,
        xi0_s_M_elems_V_6_din,
        xi0_s_M_elems_V_6_full_n,
        xi0_s_M_elems_V_6_write,
        xi1_s_M_elems_V_2_din,
        xi1_s_M_elems_V_2_full_n,
        xi1_s_M_elems_V_2_write,
        xi1_s_M_elems_V_6_din,
        xi1_s_M_elems_V_6_full_n,
        xi1_s_M_elems_V_6_write,
        xi2_s_M_elems_V_2_din,
        xi2_s_M_elems_V_2_full_n,
        xi2_s_M_elems_V_2_write,
        xi2_s_M_elems_V_6_din,
        xi2_s_M_elems_V_6_full_n,
        xi2_s_M_elems_V_6_write,
        xi3_s_M_elems_V_2_din,
        xi3_s_M_elems_V_2_full_n,
        xi3_s_M_elems_V_2_write,
        xi3_s_M_elems_V_6_din,
        xi3_s_M_elems_V_6_full_n,
        xi3_s_M_elems_V_6_write,
        xi0_s_M_elems_V_7_din,
        xi0_s_M_elems_V_7_full_n,
        xi0_s_M_elems_V_7_write,
        xi1_s_M_elems_V_7_din,
        xi1_s_M_elems_V_7_full_n,
        xi1_s_M_elems_V_7_write,
        xi2_s_M_elems_V_7_din,
        xi2_s_M_elems_V_7_full_n,
        xi2_s_M_elems_V_7_write,
        xi3_s_M_elems_V_7_din,
        xi3_s_M_elems_V_7_full_n,
        xi3_s_M_elems_V_7_write,
        xi0_s_M_elems_V_3_din,
        xi0_s_M_elems_V_3_full_n,
        xi0_s_M_elems_V_3_write,
        xi1_s_M_elems_V_3_din,
        xi1_s_M_elems_V_3_full_n,
        xi1_s_M_elems_V_3_write,
        xi2_s_M_elems_V_3_din,
        xi2_s_M_elems_V_3_full_n,
        xi2_s_M_elems_V_3_write,
        xi3_s_M_elems_V_3_din,
        xi3_s_M_elems_V_3_full_n,
        xi3_s_M_elems_V_3_write,
        p_read
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] xi0_s_M_elems_V_0_din;
input   xi0_s_M_elems_V_0_full_n;
output   xi0_s_M_elems_V_0_write;
output  [31:0] xi0_s_M_elems_V_4_din;
input   xi0_s_M_elems_V_4_full_n;
output   xi0_s_M_elems_V_4_write;
output  [31:0] xi1_s_M_elems_V_0_din;
input   xi1_s_M_elems_V_0_full_n;
output   xi1_s_M_elems_V_0_write;
output  [31:0] xi1_s_M_elems_V_4_din;
input   xi1_s_M_elems_V_4_full_n;
output   xi1_s_M_elems_V_4_write;
output  [31:0] xi2_s_M_elems_V_0_din;
input   xi2_s_M_elems_V_0_full_n;
output   xi2_s_M_elems_V_0_write;
output  [31:0] xi2_s_M_elems_V_4_din;
input   xi2_s_M_elems_V_4_full_n;
output   xi2_s_M_elems_V_4_write;
output  [31:0] xi3_s_M_elems_V_0_din;
input   xi3_s_M_elems_V_0_full_n;
output   xi3_s_M_elems_V_0_write;
output  [31:0] xi3_s_M_elems_V_4_din;
input   xi3_s_M_elems_V_4_full_n;
output   xi3_s_M_elems_V_4_write;
output  [31:0] xi0_s_M_elems_V_1_din;
input   xi0_s_M_elems_V_1_full_n;
output   xi0_s_M_elems_V_1_write;
output  [31:0] xi0_s_M_elems_V_5_din;
input   xi0_s_M_elems_V_5_full_n;
output   xi0_s_M_elems_V_5_write;
output  [31:0] xi1_s_M_elems_V_1_din;
input   xi1_s_M_elems_V_1_full_n;
output   xi1_s_M_elems_V_1_write;
output  [31:0] xi1_s_M_elems_V_5_din;
input   xi1_s_M_elems_V_5_full_n;
output   xi1_s_M_elems_V_5_write;
output  [31:0] xi2_s_M_elems_V_1_din;
input   xi2_s_M_elems_V_1_full_n;
output   xi2_s_M_elems_V_1_write;
output  [31:0] xi2_s_M_elems_V_5_din;
input   xi2_s_M_elems_V_5_full_n;
output   xi2_s_M_elems_V_5_write;
output  [31:0] xi3_s_M_elems_V_1_din;
input   xi3_s_M_elems_V_1_full_n;
output   xi3_s_M_elems_V_1_write;
output  [31:0] xi3_s_M_elems_V_5_din;
input   xi3_s_M_elems_V_5_full_n;
output   xi3_s_M_elems_V_5_write;
output  [31:0] xi0_s_M_elems_V_2_din;
input   xi0_s_M_elems_V_2_full_n;
output   xi0_s_M_elems_V_2_write;
output  [31:0] xi0_s_M_elems_V_6_din;
input   xi0_s_M_elems_V_6_full_n;
output   xi0_s_M_elems_V_6_write;
output  [31:0] xi1_s_M_elems_V_2_din;
input   xi1_s_M_elems_V_2_full_n;
output   xi1_s_M_elems_V_2_write;
output  [31:0] xi1_s_M_elems_V_6_din;
input   xi1_s_M_elems_V_6_full_n;
output   xi1_s_M_elems_V_6_write;
output  [31:0] xi2_s_M_elems_V_2_din;
input   xi2_s_M_elems_V_2_full_n;
output   xi2_s_M_elems_V_2_write;
output  [31:0] xi2_s_M_elems_V_6_din;
input   xi2_s_M_elems_V_6_full_n;
output   xi2_s_M_elems_V_6_write;
output  [31:0] xi3_s_M_elems_V_2_din;
input   xi3_s_M_elems_V_2_full_n;
output   xi3_s_M_elems_V_2_write;
output  [31:0] xi3_s_M_elems_V_6_din;
input   xi3_s_M_elems_V_6_full_n;
output   xi3_s_M_elems_V_6_write;
output  [31:0] xi0_s_M_elems_V_7_din;
input   xi0_s_M_elems_V_7_full_n;
output   xi0_s_M_elems_V_7_write;
output  [31:0] xi1_s_M_elems_V_7_din;
input   xi1_s_M_elems_V_7_full_n;
output   xi1_s_M_elems_V_7_write;
output  [31:0] xi2_s_M_elems_V_7_din;
input   xi2_s_M_elems_V_7_full_n;
output   xi2_s_M_elems_V_7_write;
output  [31:0] xi3_s_M_elems_V_7_din;
input   xi3_s_M_elems_V_7_full_n;
output   xi3_s_M_elems_V_7_write;
output  [31:0] xi0_s_M_elems_V_3_din;
input   xi0_s_M_elems_V_3_full_n;
output   xi0_s_M_elems_V_3_write;
output  [31:0] xi1_s_M_elems_V_3_din;
input   xi1_s_M_elems_V_3_full_n;
output   xi1_s_M_elems_V_3_write;
output  [31:0] xi2_s_M_elems_V_3_din;
input   xi2_s_M_elems_V_3_full_n;
output   xi2_s_M_elems_V_3_write;
output  [31:0] xi3_s_M_elems_V_3_din;
input   xi3_s_M_elems_V_3_full_n;
output   xi3_s_M_elems_V_3_write;
input  [127:0] p_read;

reg ap_idle;
reg xi0_s_M_elems_V_0_write;
reg xi0_s_M_elems_V_4_write;
reg xi1_s_M_elems_V_0_write;
reg xi1_s_M_elems_V_4_write;
reg xi2_s_M_elems_V_0_write;
reg xi2_s_M_elems_V_4_write;
reg xi3_s_M_elems_V_0_write;
reg xi3_s_M_elems_V_4_write;
reg xi0_s_M_elems_V_1_write;
reg xi0_s_M_elems_V_5_write;
reg xi1_s_M_elems_V_1_write;
reg xi1_s_M_elems_V_5_write;
reg xi2_s_M_elems_V_1_write;
reg xi2_s_M_elems_V_5_write;
reg xi3_s_M_elems_V_1_write;
reg xi3_s_M_elems_V_5_write;
reg xi0_s_M_elems_V_2_write;
reg xi0_s_M_elems_V_6_write;
reg xi1_s_M_elems_V_2_write;
reg xi1_s_M_elems_V_6_write;
reg xi2_s_M_elems_V_2_write;
reg xi2_s_M_elems_V_6_write;
reg xi3_s_M_elems_V_2_write;
reg xi3_s_M_elems_V_6_write;
reg xi0_s_M_elems_V_7_write;
reg xi1_s_M_elems_V_7_write;
reg xi2_s_M_elems_V_7_write;
reg xi3_s_M_elems_V_7_write;
reg xi0_s_M_elems_V_3_write;
reg xi1_s_M_elems_V_3_write;
reg xi2_s_M_elems_V_3_write;
reg xi3_s_M_elems_V_3_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg   [0:0] trunc_ln121_reg_509;
reg   [0:0] icmp_ln122_reg_513;
reg    ap_block_state2_pp0_stage0_iter1_grp1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln116_fu_416_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    xi3_s_M_elems_V_2_blk_n;
wire    ap_block_pp0_stage0_grp1;
reg    xi3_s_M_elems_V_6_blk_n;
reg    xi3_s_M_elems_V_1_blk_n;
reg    xi3_s_M_elems_V_5_blk_n;
reg    xi3_s_M_elems_V_0_blk_n;
reg    xi3_s_M_elems_V_4_blk_n;
reg    xi2_s_M_elems_V_2_blk_n;
reg    xi2_s_M_elems_V_6_blk_n;
reg    xi2_s_M_elems_V_1_blk_n;
reg    xi2_s_M_elems_V_5_blk_n;
reg    xi2_s_M_elems_V_0_blk_n;
reg    xi2_s_M_elems_V_4_blk_n;
reg    xi1_s_M_elems_V_2_blk_n;
reg    xi1_s_M_elems_V_6_blk_n;
reg    xi1_s_M_elems_V_1_blk_n;
reg    xi1_s_M_elems_V_5_blk_n;
reg    xi1_s_M_elems_V_0_blk_n;
reg    xi1_s_M_elems_V_4_blk_n;
reg    xi0_s_M_elems_V_3_blk_n;
reg    xi1_s_M_elems_V_3_blk_n;
reg    xi2_s_M_elems_V_3_blk_n;
reg    xi3_s_M_elems_V_3_blk_n;
reg    xi0_s_M_elems_V_7_blk_n;
reg    xi1_s_M_elems_V_7_blk_n;
reg    xi2_s_M_elems_V_7_blk_n;
reg    xi3_s_M_elems_V_7_blk_n;
reg    xi0_s_M_elems_V_2_blk_n;
reg    xi0_s_M_elems_V_6_blk_n;
reg    xi0_s_M_elems_V_1_blk_n;
reg    xi0_s_M_elems_V_5_blk_n;
reg    xi0_s_M_elems_V_0_blk_n;
reg    xi0_s_M_elems_V_4_blk_n;
wire   [31:0] bitcast_ln118_fu_362_p1;
reg   [31:0] bitcast_ln118_reg_458;
reg    ap_block_pp0_stage0_11001_grp1;
wire   [31:0] bitcast_ln118_1_fu_376_p1;
reg   [31:0] bitcast_ln118_1_reg_470;
wire   [31:0] bitcast_ln118_2_fu_390_p1;
reg   [31:0] bitcast_ln118_2_reg_482;
wire   [31:0] bitcast_ln118_3_fu_404_p1;
reg   [31:0] bitcast_ln118_3_reg_494;
wire   [0:0] trunc_ln121_fu_428_p1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln122_fu_440_p2;
reg   [4:0] i_fu_124;
wire   [4:0] add_ln116_fu_422_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_i_1;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_01001_grp1;
wire   [31:0] empty_fu_358_p1;
wire   [31:0] p_0_0_1_partselect_i_fu_366_p4;
wire   [31:0] p_0_0_2_partselect_i_fu_380_p4;
wire   [31:0] p_0_0_3_partselect_i_fu_394_p4;
wire   [2:0] or_ln_fu_432_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 i_fu_124 = 5'd0;
#0 ap_done_reg = 1'b0;
end

Macro_MAC_Acc4_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln116_fu_416_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_124 <= add_ln116_fu_422_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_124 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bitcast_ln118_1_reg_470 <= bitcast_ln118_1_fu_376_p1;
        bitcast_ln118_2_reg_482 <= bitcast_ln118_2_fu_390_p1;
        bitcast_ln118_3_reg_494 <= bitcast_ln118_3_fu_404_p1;
        bitcast_ln118_reg_458 <= bitcast_ln118_fu_362_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln122_reg_513 <= icmp_ln122_fu_440_p2;
        trunc_ln121_reg_509 <= trunc_ln121_fu_428_p1;
    end
end

always @ (*) begin
    if (((icmp_ln116_fu_416_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 5'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_124;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi0_s_M_elems_V_0_blk_n = xi0_s_M_elems_V_0_full_n;
    end else begin
        xi0_s_M_elems_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi0_s_M_elems_V_0_write = 1'b1;
    end else begin
        xi0_s_M_elems_V_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi0_s_M_elems_V_1_blk_n = xi0_s_M_elems_V_1_full_n;
    end else begin
        xi0_s_M_elems_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi0_s_M_elems_V_1_write = 1'b1;
    end else begin
        xi0_s_M_elems_V_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi0_s_M_elems_V_2_blk_n = xi0_s_M_elems_V_2_full_n;
    end else begin
        xi0_s_M_elems_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi0_s_M_elems_V_2_write = 1'b1;
    end else begin
        xi0_s_M_elems_V_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (icmp_ln122_reg_513 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi0_s_M_elems_V_3_blk_n = xi0_s_M_elems_V_3_full_n;
    end else begin
        xi0_s_M_elems_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (icmp_ln122_reg_513 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi0_s_M_elems_V_3_write = 1'b1;
    end else begin
        xi0_s_M_elems_V_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi0_s_M_elems_V_4_blk_n = xi0_s_M_elems_V_4_full_n;
    end else begin
        xi0_s_M_elems_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi0_s_M_elems_V_4_write = 1'b1;
    end else begin
        xi0_s_M_elems_V_4_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi0_s_M_elems_V_5_blk_n = xi0_s_M_elems_V_5_full_n;
    end else begin
        xi0_s_M_elems_V_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi0_s_M_elems_V_5_write = 1'b1;
    end else begin
        xi0_s_M_elems_V_5_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi0_s_M_elems_V_6_blk_n = xi0_s_M_elems_V_6_full_n;
    end else begin
        xi0_s_M_elems_V_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi0_s_M_elems_V_6_write = 1'b1;
    end else begin
        xi0_s_M_elems_V_6_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (icmp_ln122_reg_513 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi0_s_M_elems_V_7_blk_n = xi0_s_M_elems_V_7_full_n;
    end else begin
        xi0_s_M_elems_V_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (icmp_ln122_reg_513 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi0_s_M_elems_V_7_write = 1'b1;
    end else begin
        xi0_s_M_elems_V_7_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi1_s_M_elems_V_0_blk_n = xi1_s_M_elems_V_0_full_n;
    end else begin
        xi1_s_M_elems_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi1_s_M_elems_V_0_write = 1'b1;
    end else begin
        xi1_s_M_elems_V_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi1_s_M_elems_V_1_blk_n = xi1_s_M_elems_V_1_full_n;
    end else begin
        xi1_s_M_elems_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi1_s_M_elems_V_1_write = 1'b1;
    end else begin
        xi1_s_M_elems_V_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi1_s_M_elems_V_2_blk_n = xi1_s_M_elems_V_2_full_n;
    end else begin
        xi1_s_M_elems_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi1_s_M_elems_V_2_write = 1'b1;
    end else begin
        xi1_s_M_elems_V_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (icmp_ln122_reg_513 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi1_s_M_elems_V_3_blk_n = xi1_s_M_elems_V_3_full_n;
    end else begin
        xi1_s_M_elems_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (icmp_ln122_reg_513 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi1_s_M_elems_V_3_write = 1'b1;
    end else begin
        xi1_s_M_elems_V_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi1_s_M_elems_V_4_blk_n = xi1_s_M_elems_V_4_full_n;
    end else begin
        xi1_s_M_elems_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi1_s_M_elems_V_4_write = 1'b1;
    end else begin
        xi1_s_M_elems_V_4_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi1_s_M_elems_V_5_blk_n = xi1_s_M_elems_V_5_full_n;
    end else begin
        xi1_s_M_elems_V_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi1_s_M_elems_V_5_write = 1'b1;
    end else begin
        xi1_s_M_elems_V_5_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi1_s_M_elems_V_6_blk_n = xi1_s_M_elems_V_6_full_n;
    end else begin
        xi1_s_M_elems_V_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi1_s_M_elems_V_6_write = 1'b1;
    end else begin
        xi1_s_M_elems_V_6_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (icmp_ln122_reg_513 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi1_s_M_elems_V_7_blk_n = xi1_s_M_elems_V_7_full_n;
    end else begin
        xi1_s_M_elems_V_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (icmp_ln122_reg_513 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi1_s_M_elems_V_7_write = 1'b1;
    end else begin
        xi1_s_M_elems_V_7_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi2_s_M_elems_V_0_blk_n = xi2_s_M_elems_V_0_full_n;
    end else begin
        xi2_s_M_elems_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi2_s_M_elems_V_0_write = 1'b1;
    end else begin
        xi2_s_M_elems_V_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi2_s_M_elems_V_1_blk_n = xi2_s_M_elems_V_1_full_n;
    end else begin
        xi2_s_M_elems_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi2_s_M_elems_V_1_write = 1'b1;
    end else begin
        xi2_s_M_elems_V_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi2_s_M_elems_V_2_blk_n = xi2_s_M_elems_V_2_full_n;
    end else begin
        xi2_s_M_elems_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi2_s_M_elems_V_2_write = 1'b1;
    end else begin
        xi2_s_M_elems_V_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (icmp_ln122_reg_513 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi2_s_M_elems_V_3_blk_n = xi2_s_M_elems_V_3_full_n;
    end else begin
        xi2_s_M_elems_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (icmp_ln122_reg_513 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi2_s_M_elems_V_3_write = 1'b1;
    end else begin
        xi2_s_M_elems_V_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi2_s_M_elems_V_4_blk_n = xi2_s_M_elems_V_4_full_n;
    end else begin
        xi2_s_M_elems_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi2_s_M_elems_V_4_write = 1'b1;
    end else begin
        xi2_s_M_elems_V_4_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi2_s_M_elems_V_5_blk_n = xi2_s_M_elems_V_5_full_n;
    end else begin
        xi2_s_M_elems_V_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi2_s_M_elems_V_5_write = 1'b1;
    end else begin
        xi2_s_M_elems_V_5_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi2_s_M_elems_V_6_blk_n = xi2_s_M_elems_V_6_full_n;
    end else begin
        xi2_s_M_elems_V_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi2_s_M_elems_V_6_write = 1'b1;
    end else begin
        xi2_s_M_elems_V_6_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (icmp_ln122_reg_513 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi2_s_M_elems_V_7_blk_n = xi2_s_M_elems_V_7_full_n;
    end else begin
        xi2_s_M_elems_V_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (icmp_ln122_reg_513 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi2_s_M_elems_V_7_write = 1'b1;
    end else begin
        xi2_s_M_elems_V_7_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi3_s_M_elems_V_0_blk_n = xi3_s_M_elems_V_0_full_n;
    end else begin
        xi3_s_M_elems_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi3_s_M_elems_V_0_write = 1'b1;
    end else begin
        xi3_s_M_elems_V_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi3_s_M_elems_V_1_blk_n = xi3_s_M_elems_V_1_full_n;
    end else begin
        xi3_s_M_elems_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi3_s_M_elems_V_1_write = 1'b1;
    end else begin
        xi3_s_M_elems_V_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi3_s_M_elems_V_2_blk_n = xi3_s_M_elems_V_2_full_n;
    end else begin
        xi3_s_M_elems_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd0))) begin
        xi3_s_M_elems_V_2_write = 1'b1;
    end else begin
        xi3_s_M_elems_V_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (icmp_ln122_reg_513 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi3_s_M_elems_V_3_blk_n = xi3_s_M_elems_V_3_full_n;
    end else begin
        xi3_s_M_elems_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (icmp_ln122_reg_513 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi3_s_M_elems_V_3_write = 1'b1;
    end else begin
        xi3_s_M_elems_V_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi3_s_M_elems_V_4_blk_n = xi3_s_M_elems_V_4_full_n;
    end else begin
        xi3_s_M_elems_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi3_s_M_elems_V_4_write = 1'b1;
    end else begin
        xi3_s_M_elems_V_4_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi3_s_M_elems_V_5_blk_n = xi3_s_M_elems_V_5_full_n;
    end else begin
        xi3_s_M_elems_V_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi3_s_M_elems_V_5_write = 1'b1;
    end else begin
        xi3_s_M_elems_V_5_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi3_s_M_elems_V_6_blk_n = xi3_s_M_elems_V_6_full_n;
    end else begin
        xi3_s_M_elems_V_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln121_reg_509 == 1'd1))) begin
        xi3_s_M_elems_V_6_write = 1'b1;
    end else begin
        xi3_s_M_elems_V_6_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (icmp_ln122_reg_513 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi3_s_M_elems_V_7_blk_n = xi3_s_M_elems_V_7_full_n;
    end else begin
        xi3_s_M_elems_V_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (icmp_ln122_reg_513 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xi3_s_M_elems_V_7_write = 1'b1;
    end else begin
        xi3_s_M_elems_V_7_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln116_fu_422_p2 = (ap_sig_allocacmp_i_1 + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001_grp1 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1_grp1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1_grp1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1_grp1));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1_grp1));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1_grp1 = (((icmp_ln122_reg_513 == 1'd1) & (xi3_s_M_elems_V_3_full_n == 1'b0)) | ((icmp_ln122_reg_513 == 1'd1) & (xi2_s_M_elems_V_3_full_n == 1'b0)) | ((icmp_ln122_reg_513 == 1'd1) & (xi1_s_M_elems_V_3_full_n == 1'b0)) | ((icmp_ln122_reg_513 == 1'd1) & (xi0_s_M_elems_V_3_full_n == 1'b0)) | ((icmp_ln122_reg_513 == 1'd0) & (xi3_s_M_elems_V_7_full_n == 1'b0)) | ((icmp_ln122_reg_513 == 1'd0) & (xi2_s_M_elems_V_7_full_n == 1'b0)) | ((icmp_ln122_reg_513 == 1'd0) & (xi1_s_M_elems_V_7_full_n == 1'b0)) | ((icmp_ln122_reg_513 == 1'd0) & (xi0_s_M_elems_V_7_full_n == 1'b0)) | ((xi0_s_M_elems_V_6_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd1)) | ((xi0_s_M_elems_V_2_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd0)) | ((xi3_s_M_elems_V_5_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd1)) | ((xi3_s_M_elems_V_1_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd0)) | ((xi2_s_M_elems_V_5_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd1)) | ((xi2_s_M_elems_V_1_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd0)) | ((xi1_s_M_elems_V_5_full_n == 1'b0) & 
    (trunc_ln121_reg_509 == 1'd1)) | ((xi1_s_M_elems_V_1_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd0)) | ((xi0_s_M_elems_V_5_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd1)) | ((xi0_s_M_elems_V_1_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd0)) | ((xi3_s_M_elems_V_4_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd1)) | ((xi3_s_M_elems_V_0_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd0)) | ((xi2_s_M_elems_V_4_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd1)) | ((xi2_s_M_elems_V_0_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd0)) | ((xi1_s_M_elems_V_4_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd1)) | ((xi1_s_M_elems_V_0_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd0)) | ((trunc_ln121_reg_509 == 1'd1) & (xi3_s_M_elems_V_6_full_n == 1'b0)) | ((trunc_ln121_reg_509 == 1'd1) & (xi2_s_M_elems_V_6_full_n == 1'b0)) | ((trunc_ln121_reg_509 == 1'd1) & (xi1_s_M_elems_V_6_full_n == 1'b0)) | ((xi0_s_M_elems_V_4_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd1)) | ((trunc_ln121_reg_509 == 1'd0) & (xi3_s_M_elems_V_2_full_n == 1'b0)) 
    | ((trunc_ln121_reg_509 == 1'd0) & (xi2_s_M_elems_V_2_full_n == 1'b0)) | ((trunc_ln121_reg_509 == 1'd0) & (xi1_s_M_elems_V_2_full_n == 1'b0)) | ((xi0_s_M_elems_V_0_full_n == 1'b0) & (trunc_ln121_reg_509 == 1'd0)));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bitcast_ln118_1_fu_376_p1 = p_0_0_1_partselect_i_fu_366_p4;

assign bitcast_ln118_2_fu_390_p1 = p_0_0_2_partselect_i_fu_380_p4;

assign bitcast_ln118_3_fu_404_p1 = p_0_0_3_partselect_i_fu_394_p4;

assign bitcast_ln118_fu_362_p1 = empty_fu_358_p1;

assign empty_fu_358_p1 = p_read[31:0];

assign icmp_ln116_fu_416_p2 = ((ap_sig_allocacmp_i_1 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_440_p2 = ((or_ln_fu_432_p3 == 3'd3) ? 1'b1 : 1'b0);

assign or_ln_fu_432_p3 = {{trunc_ln121_fu_428_p1}, {2'd3}};

assign p_0_0_1_partselect_i_fu_366_p4 = {{p_read[63:32]}};

assign p_0_0_2_partselect_i_fu_380_p4 = {{p_read[95:64]}};

assign p_0_0_3_partselect_i_fu_394_p4 = {{p_read[127:96]}};

assign trunc_ln121_fu_428_p1 = ap_sig_allocacmp_i_1[0:0];

assign xi0_s_M_elems_V_0_din = bitcast_ln118_reg_458;

assign xi0_s_M_elems_V_1_din = bitcast_ln118_1_reg_470;

assign xi0_s_M_elems_V_2_din = bitcast_ln118_2_reg_482;

assign xi0_s_M_elems_V_3_din = bitcast_ln118_3_reg_494;

assign xi0_s_M_elems_V_4_din = bitcast_ln118_reg_458;

assign xi0_s_M_elems_V_5_din = bitcast_ln118_1_reg_470;

assign xi0_s_M_elems_V_6_din = bitcast_ln118_2_reg_482;

assign xi0_s_M_elems_V_7_din = bitcast_ln118_3_reg_494;

assign xi1_s_M_elems_V_0_din = bitcast_ln118_reg_458;

assign xi1_s_M_elems_V_1_din = bitcast_ln118_1_reg_470;

assign xi1_s_M_elems_V_2_din = bitcast_ln118_2_reg_482;

assign xi1_s_M_elems_V_3_din = bitcast_ln118_3_reg_494;

assign xi1_s_M_elems_V_4_din = bitcast_ln118_reg_458;

assign xi1_s_M_elems_V_5_din = bitcast_ln118_1_reg_470;

assign xi1_s_M_elems_V_6_din = bitcast_ln118_2_reg_482;

assign xi1_s_M_elems_V_7_din = bitcast_ln118_3_reg_494;

assign xi2_s_M_elems_V_0_din = bitcast_ln118_reg_458;

assign xi2_s_M_elems_V_1_din = bitcast_ln118_1_reg_470;

assign xi2_s_M_elems_V_2_din = bitcast_ln118_2_reg_482;

assign xi2_s_M_elems_V_3_din = bitcast_ln118_3_reg_494;

assign xi2_s_M_elems_V_4_din = bitcast_ln118_reg_458;

assign xi2_s_M_elems_V_5_din = bitcast_ln118_1_reg_470;

assign xi2_s_M_elems_V_6_din = bitcast_ln118_2_reg_482;

assign xi2_s_M_elems_V_7_din = bitcast_ln118_3_reg_494;

assign xi3_s_M_elems_V_0_din = bitcast_ln118_reg_458;

assign xi3_s_M_elems_V_1_din = bitcast_ln118_1_reg_470;

assign xi3_s_M_elems_V_2_din = bitcast_ln118_2_reg_482;

assign xi3_s_M_elems_V_3_din = bitcast_ln118_3_reg_494;

assign xi3_s_M_elems_V_4_din = bitcast_ln118_reg_458;

assign xi3_s_M_elems_V_5_din = bitcast_ln118_1_reg_470;

assign xi3_s_M_elems_V_6_din = bitcast_ln118_2_reg_482;

assign xi3_s_M_elems_V_7_din = bitcast_ln118_3_reg_494;

endmodule //Macro_MAC_Acc4_top_read_xi_to_stream
