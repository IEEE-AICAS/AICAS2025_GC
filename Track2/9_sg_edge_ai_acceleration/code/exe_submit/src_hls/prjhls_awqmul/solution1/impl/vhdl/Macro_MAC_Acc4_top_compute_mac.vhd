-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Macro_MAC_Acc4_top_compute_mac is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    xi_s_0_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    xi_s_0_0_empty_n : IN STD_LOGIC;
    xi_s_0_0_read : OUT STD_LOGIC;
    xi_s_0_01_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    xi_s_0_01_empty_n : IN STD_LOGIC;
    xi_s_0_01_read : OUT STD_LOGIC;
    xi_s_0_02_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    xi_s_0_02_empty_n : IN STD_LOGIC;
    xi_s_0_02_read : OUT STD_LOGIC;
    xi_s_0_03_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    xi_s_0_03_empty_n : IN STD_LOGIC;
    xi_s_0_03_read : OUT STD_LOGIC;
    xi_s_0_04_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    xi_s_0_04_empty_n : IN STD_LOGIC;
    xi_s_0_04_read : OUT STD_LOGIC;
    xi_s_0_05_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    xi_s_0_05_empty_n : IN STD_LOGIC;
    xi_s_0_05_read : OUT STD_LOGIC;
    xi_s_0_06_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    xi_s_0_06_empty_n : IN STD_LOGIC;
    xi_s_0_06_read : OUT STD_LOGIC;
    xi_s_0_07_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    xi_s_0_07_empty_n : IN STD_LOGIC;
    xi_s_0_07_read : OUT STD_LOGIC;
    mro_s_0_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mro_s_0_0_empty_n : IN STD_LOGIC;
    mro_s_0_0_read : OUT STD_LOGIC;
    mro_s_0_08_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mro_s_0_08_empty_n : IN STD_LOGIC;
    mro_s_0_08_read : OUT STD_LOGIC;
    mro_s_0_09_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mro_s_0_09_empty_n : IN STD_LOGIC;
    mro_s_0_09_read : OUT STD_LOGIC;
    mro_s_0_010_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mro_s_0_010_empty_n : IN STD_LOGIC;
    mro_s_0_010_read : OUT STD_LOGIC;
    mro_s_0_011_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mro_s_0_011_empty_n : IN STD_LOGIC;
    mro_s_0_011_read : OUT STD_LOGIC;
    mro_s_0_012_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mro_s_0_012_empty_n : IN STD_LOGIC;
    mro_s_0_012_read : OUT STD_LOGIC;
    mro_s_0_013_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mro_s_0_013_empty_n : IN STD_LOGIC;
    mro_s_0_013_read : OUT STD_LOGIC;
    mro_s_0_014_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mro_s_0_014_empty_n : IN STD_LOGIC;
    mro_s_0_014_read : OUT STD_LOGIC;
    qzeros_0_val8 : IN STD_LOGIC_VECTOR (3 downto 0);
    qzeros_1_val16 : IN STD_LOGIC_VECTOR (3 downto 0);
    qzeros_2_val24 : IN STD_LOGIC_VECTOR (3 downto 0);
    qzeros_3_val32 : IN STD_LOGIC_VECTOR (3 downto 0);
    qzeros_4_val40 : IN STD_LOGIC_VECTOR (3 downto 0);
    qzeros_5_val48 : IN STD_LOGIC_VECTOR (3 downto 0);
    qzeros_6_val56 : IN STD_LOGIC_VECTOR (3 downto 0);
    qzeros_7_val64 : IN STD_LOGIC_VECTOR (3 downto 0);
    qscale_0_val72 : IN STD_LOGIC_VECTOR (31 downto 0);
    qscale_1_val81 : IN STD_LOGIC_VECTOR (31 downto 0);
    qscale_2_val89 : IN STD_LOGIC_VECTOR (31 downto 0);
    qscale_3_val98 : IN STD_LOGIC_VECTOR (31 downto 0);
    qscale_4_val106 : IN STD_LOGIC_VECTOR (31 downto 0);
    qscale_5_val115 : IN STD_LOGIC_VECTOR (31 downto 0);
    qscale_6_val123 : IN STD_LOGIC_VECTOR (31 downto 0);
    qscale_7_val132 : IN STD_LOGIC_VECTOR (31 downto 0);
    pout_local_0_i : IN STD_LOGIC_VECTOR (31 downto 0);
    pout_local_0_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    pout_local_0_o_ap_vld : OUT STD_LOGIC;
    pout_local_1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    pout_local_1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    pout_local_1_o_ap_vld : OUT STD_LOGIC;
    pout_local_2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    pout_local_2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    pout_local_2_o_ap_vld : OUT STD_LOGIC;
    pout_local_3_i : IN STD_LOGIC_VECTOR (31 downto 0);
    pout_local_3_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    pout_local_3_o_ap_vld : OUT STD_LOGIC;
    pout_local_4_i : IN STD_LOGIC_VECTOR (31 downto 0);
    pout_local_4_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    pout_local_4_o_ap_vld : OUT STD_LOGIC;
    pout_local_5_i : IN STD_LOGIC_VECTOR (31 downto 0);
    pout_local_5_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    pout_local_5_o_ap_vld : OUT STD_LOGIC;
    pout_local_6_i : IN STD_LOGIC_VECTOR (31 downto 0);
    pout_local_6_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    pout_local_6_o_ap_vld : OUT STD_LOGIC;
    pout_local_7_i : IN STD_LOGIC_VECTOR (31 downto 0);
    pout_local_7_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    pout_local_7_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of Macro_MAC_Acc4_top_compute_mac is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal pout_temp_reg_1499 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal pout_temp_1_reg_1504 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_2_reg_1509 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_3_reg_1514 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_4_reg_1519 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_5_reg_1524 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_6_reg_1529 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_7_reg_1534 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_8_reg_1539 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_9_reg_1544 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_10_reg_1549 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_11_reg_1554 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_12_reg_1559 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_13_reg_1564 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_14_reg_1569 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_15_reg_1574 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_16_reg_1579 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_17_reg_1584 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_18_reg_1589 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_19_reg_1594 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_20_reg_1599 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_21_reg_1604 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_22_reg_1609 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_23_reg_1614 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_24_reg_1619 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_25_reg_1624 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_26_reg_1629 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_27_reg_1634 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_28_reg_1639 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_29_reg_1644 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_30_reg_1649 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_31_reg_1654 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_32_reg_1659 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_33_reg_1664 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_34_reg_1669 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_35_reg_1674 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_36_reg_1679 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_37_reg_1684 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_38_reg_1689 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_39_reg_1694 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_40_reg_1699 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_41_reg_1704 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_42_reg_1709 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_43_reg_1714 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_44_reg_1719 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_45_reg_1724 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_46_reg_1729 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_47_reg_1734 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_48_reg_1739 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_49_reg_1744 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_50_reg_1749 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_51_reg_1754 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_52_reg_1759 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_53_reg_1764 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_54_reg_1769 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_55_reg_1774 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_56_reg_1779 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_57_reg_1784 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_58_reg_1789 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_59_reg_1794 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_60_reg_1799 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_61_reg_1804 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_62_reg_1809 : STD_LOGIC_VECTOR (31 downto 0);
    signal pout_temp_63_reg_1814 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln235_fu_996_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln235_reg_1822_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter9_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter10_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter11_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter12_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter13_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter14_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter15_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter16_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter17_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter18_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter19_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter20_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter21_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter22_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_reg_1822_pp0_iter23_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_1000_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1827 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1032_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1832 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1064_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1837 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1096_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1842 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1128_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1847 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1160_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1852 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_1192_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_1857 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1224_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1862 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_680_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_reg_1867 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_684_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add1_reg_1872 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_688_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add2_reg_1877 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_692_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_reg_1882 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_696_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add4_reg_1887 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_700_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add5_reg_1892 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_704_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal final_sum_reg_1897 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1261_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1902 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal grp_compute_mac_sub_fu_360_ap_done : STD_LOGIC;
    signal grp_compute_mac_sub_fu_400_ap_done : STD_LOGIC;
    signal grp_compute_mac_sub_fu_440_ap_done : STD_LOGIC;
    signal grp_compute_mac_sub_fu_480_ap_done : STD_LOGIC;
    signal grp_compute_mac_sub_fu_520_ap_done : STD_LOGIC;
    signal grp_compute_mac_sub_fu_560_ap_done : STD_LOGIC;
    signal grp_compute_mac_sub_fu_600_ap_done : STD_LOGIC;
    signal grp_compute_mac_sub_fu_640_ap_done : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln235_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal grp_compute_mac_sub_fu_360_ap_start : STD_LOGIC;
    signal grp_compute_mac_sub_fu_360_ap_idle : STD_LOGIC;
    signal grp_compute_mac_sub_fu_360_ap_ready : STD_LOGIC;
    signal grp_compute_mac_sub_fu_360_xi_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_360_mro_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_360_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_360_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_360_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_360_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_360_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_360_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_360_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_360_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_400_ap_start : STD_LOGIC;
    signal grp_compute_mac_sub_fu_400_ap_idle : STD_LOGIC;
    signal grp_compute_mac_sub_fu_400_ap_ready : STD_LOGIC;
    signal grp_compute_mac_sub_fu_400_xi_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_400_mro_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_400_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_400_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_400_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_400_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_400_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_400_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_400_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_400_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_440_ap_start : STD_LOGIC;
    signal grp_compute_mac_sub_fu_440_ap_idle : STD_LOGIC;
    signal grp_compute_mac_sub_fu_440_ap_ready : STD_LOGIC;
    signal grp_compute_mac_sub_fu_440_xi_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_440_mro_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_440_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_440_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_440_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_440_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_440_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_440_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_440_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_440_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_480_ap_start : STD_LOGIC;
    signal grp_compute_mac_sub_fu_480_ap_idle : STD_LOGIC;
    signal grp_compute_mac_sub_fu_480_ap_ready : STD_LOGIC;
    signal grp_compute_mac_sub_fu_480_xi_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_480_mro_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_480_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_480_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_480_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_480_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_480_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_480_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_480_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_480_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_520_ap_start : STD_LOGIC;
    signal grp_compute_mac_sub_fu_520_ap_idle : STD_LOGIC;
    signal grp_compute_mac_sub_fu_520_ap_ready : STD_LOGIC;
    signal grp_compute_mac_sub_fu_520_xi_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_520_mro_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_520_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_520_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_520_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_520_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_520_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_520_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_520_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_520_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_560_ap_start : STD_LOGIC;
    signal grp_compute_mac_sub_fu_560_ap_idle : STD_LOGIC;
    signal grp_compute_mac_sub_fu_560_ap_ready : STD_LOGIC;
    signal grp_compute_mac_sub_fu_560_xi_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_560_mro_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_560_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_560_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_560_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_560_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_560_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_560_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_560_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_560_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_600_ap_start : STD_LOGIC;
    signal grp_compute_mac_sub_fu_600_ap_idle : STD_LOGIC;
    signal grp_compute_mac_sub_fu_600_ap_ready : STD_LOGIC;
    signal grp_compute_mac_sub_fu_600_xi_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_600_mro_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_600_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_600_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_600_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_600_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_600_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_600_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_600_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_600_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_640_ap_start : STD_LOGIC;
    signal grp_compute_mac_sub_fu_640_ap_idle : STD_LOGIC;
    signal grp_compute_mac_sub_fu_640_ap_ready : STD_LOGIC;
    signal grp_compute_mac_sub_fu_640_xi_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_640_mro_s_0_read : STD_LOGIC;
    signal grp_compute_mac_sub_fu_640_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_640_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_640_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_640_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_640_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_640_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_640_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_640_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_mac_sub_fu_360_ap_start_reg : STD_LOGIC := '0';
    signal grp_compute_mac_sub_fu_400_ap_start_reg : STD_LOGIC := '0';
    signal grp_compute_mac_sub_fu_440_ap_start_reg : STD_LOGIC := '0';
    signal grp_compute_mac_sub_fu_480_ap_start_reg : STD_LOGIC := '0';
    signal grp_compute_mac_sub_fu_520_ap_start_reg : STD_LOGIC := '0';
    signal grp_compute_mac_sub_fu_560_ap_start_reg : STD_LOGIC := '0';
    signal grp_compute_mac_sub_fu_600_ap_start_reg : STD_LOGIC := '0';
    signal grp_compute_mac_sub_fu_640_ap_start_reg : STD_LOGIC := '0';
    signal j_fu_156 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln235_fu_990_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_708_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_1000_p17 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1032_p17 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1064_p17 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1096_p17 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1128_p17 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1160_p17 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_1192_p17 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1224_p17 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1261_p17 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal tmp_fu_1000_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_1000_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_1000_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_1000_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_1000_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_1000_p11 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_1000_p13 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_1000_p15 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_fu_1032_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_fu_1032_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_fu_1032_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_fu_1032_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_fu_1032_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_fu_1032_p11 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_fu_1032_p13 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_fu_1032_p15 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_1064_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_1064_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_1064_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_1064_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_1064_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_1064_p11 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_1064_p13 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_1064_p15 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_1096_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_1096_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_1096_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_1096_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_1096_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_1096_p11 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_1096_p13 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_1096_p15 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_1128_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_1128_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_1128_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_1128_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_1128_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_1128_p11 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_1128_p13 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_1128_p15 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_1160_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_1160_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_1160_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_1160_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_1160_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_1160_p11 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_1160_p13 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_1160_p15 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_1192_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_1192_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_1192_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_1192_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_1192_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_1192_p11 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_1192_p13 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_1192_p15 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_1224_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_1224_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_1224_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_1224_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_1224_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_1224_p11 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_1224_p13 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_1224_p15 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_1261_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_1261_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_1261_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_1261_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_1261_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_1261_p11 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_1261_p13 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_1261_p15 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component Macro_MAC_Acc4_top_compute_mac_sub IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        xi_s_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        xi_s_0_empty_n : IN STD_LOGIC;
        xi_s_0_read : OUT STD_LOGIC;
        mro_s_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mro_s_0_empty_n : IN STD_LOGIC;
        mro_s_0_read : OUT STD_LOGIC;
        qzeros_0_val : IN STD_LOGIC_VECTOR (3 downto 0);
        qzeros_1_val : IN STD_LOGIC_VECTOR (3 downto 0);
        qzeros_2_val : IN STD_LOGIC_VECTOR (3 downto 0);
        qzeros_3_val : IN STD_LOGIC_VECTOR (3 downto 0);
        qzeros_4_val : IN STD_LOGIC_VECTOR (3 downto 0);
        qzeros_5_val : IN STD_LOGIC_VECTOR (3 downto 0);
        qzeros_6_val : IN STD_LOGIC_VECTOR (3 downto 0);
        qzeros_7_val : IN STD_LOGIC_VECTOR (3 downto 0);
        qscale_0_val : IN STD_LOGIC_VECTOR (31 downto 0);
        qscale_1_val : IN STD_LOGIC_VECTOR (31 downto 0);
        qscale_2_val : IN STD_LOGIC_VECTOR (31 downto 0);
        qscale_3_val : IN STD_LOGIC_VECTOR (31 downto 0);
        qscale_4_val : IN STD_LOGIC_VECTOR (31 downto 0);
        qscale_5_val : IN STD_LOGIC_VECTOR (31 downto 0);
        qscale_6_val : IN STD_LOGIC_VECTOR (31 downto 0);
        qscale_7_val : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Macro_MAC_Acc4_top_fadd_32ns_32ns_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Macro_MAC_Acc4_top_sparsemux_17_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (2 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (2 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (2 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (2 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (2 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (2 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (2 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (2 downto 0);
        din7_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_compute_mac_sub_fu_360 : component Macro_MAC_Acc4_top_compute_mac_sub
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_mac_sub_fu_360_ap_start,
        ap_done => grp_compute_mac_sub_fu_360_ap_done,
        ap_idle => grp_compute_mac_sub_fu_360_ap_idle,
        ap_ready => grp_compute_mac_sub_fu_360_ap_ready,
        xi_s_0_dout => xi_s_0_0_dout,
        xi_s_0_empty_n => xi_s_0_0_empty_n,
        xi_s_0_read => grp_compute_mac_sub_fu_360_xi_s_0_read,
        mro_s_0_dout => mro_s_0_0_dout,
        mro_s_0_empty_n => mro_s_0_0_empty_n,
        mro_s_0_read => grp_compute_mac_sub_fu_360_mro_s_0_read,
        qzeros_0_val => qzeros_0_val8,
        qzeros_1_val => qzeros_1_val16,
        qzeros_2_val => qzeros_2_val24,
        qzeros_3_val => qzeros_3_val32,
        qzeros_4_val => qzeros_4_val40,
        qzeros_5_val => qzeros_5_val48,
        qzeros_6_val => qzeros_6_val56,
        qzeros_7_val => qzeros_7_val64,
        qscale_0_val => qscale_0_val72,
        qscale_1_val => qscale_1_val81,
        qscale_2_val => qscale_2_val89,
        qscale_3_val => qscale_3_val98,
        qscale_4_val => qscale_4_val106,
        qscale_5_val => qscale_5_val115,
        qscale_6_val => qscale_6_val123,
        qscale_7_val => qscale_7_val132,
        ap_return_0 => grp_compute_mac_sub_fu_360_ap_return_0,
        ap_return_1 => grp_compute_mac_sub_fu_360_ap_return_1,
        ap_return_2 => grp_compute_mac_sub_fu_360_ap_return_2,
        ap_return_3 => grp_compute_mac_sub_fu_360_ap_return_3,
        ap_return_4 => grp_compute_mac_sub_fu_360_ap_return_4,
        ap_return_5 => grp_compute_mac_sub_fu_360_ap_return_5,
        ap_return_6 => grp_compute_mac_sub_fu_360_ap_return_6,
        ap_return_7 => grp_compute_mac_sub_fu_360_ap_return_7);

    grp_compute_mac_sub_fu_400 : component Macro_MAC_Acc4_top_compute_mac_sub
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_mac_sub_fu_400_ap_start,
        ap_done => grp_compute_mac_sub_fu_400_ap_done,
        ap_idle => grp_compute_mac_sub_fu_400_ap_idle,
        ap_ready => grp_compute_mac_sub_fu_400_ap_ready,
        xi_s_0_dout => xi_s_0_01_dout,
        xi_s_0_empty_n => xi_s_0_01_empty_n,
        xi_s_0_read => grp_compute_mac_sub_fu_400_xi_s_0_read,
        mro_s_0_dout => mro_s_0_08_dout,
        mro_s_0_empty_n => mro_s_0_08_empty_n,
        mro_s_0_read => grp_compute_mac_sub_fu_400_mro_s_0_read,
        qzeros_0_val => qzeros_0_val8,
        qzeros_1_val => qzeros_1_val16,
        qzeros_2_val => qzeros_2_val24,
        qzeros_3_val => qzeros_3_val32,
        qzeros_4_val => qzeros_4_val40,
        qzeros_5_val => qzeros_5_val48,
        qzeros_6_val => qzeros_6_val56,
        qzeros_7_val => qzeros_7_val64,
        qscale_0_val => qscale_0_val72,
        qscale_1_val => qscale_1_val81,
        qscale_2_val => qscale_2_val89,
        qscale_3_val => qscale_3_val98,
        qscale_4_val => qscale_4_val106,
        qscale_5_val => qscale_5_val115,
        qscale_6_val => qscale_6_val123,
        qscale_7_val => qscale_7_val132,
        ap_return_0 => grp_compute_mac_sub_fu_400_ap_return_0,
        ap_return_1 => grp_compute_mac_sub_fu_400_ap_return_1,
        ap_return_2 => grp_compute_mac_sub_fu_400_ap_return_2,
        ap_return_3 => grp_compute_mac_sub_fu_400_ap_return_3,
        ap_return_4 => grp_compute_mac_sub_fu_400_ap_return_4,
        ap_return_5 => grp_compute_mac_sub_fu_400_ap_return_5,
        ap_return_6 => grp_compute_mac_sub_fu_400_ap_return_6,
        ap_return_7 => grp_compute_mac_sub_fu_400_ap_return_7);

    grp_compute_mac_sub_fu_440 : component Macro_MAC_Acc4_top_compute_mac_sub
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_mac_sub_fu_440_ap_start,
        ap_done => grp_compute_mac_sub_fu_440_ap_done,
        ap_idle => grp_compute_mac_sub_fu_440_ap_idle,
        ap_ready => grp_compute_mac_sub_fu_440_ap_ready,
        xi_s_0_dout => xi_s_0_02_dout,
        xi_s_0_empty_n => xi_s_0_02_empty_n,
        xi_s_0_read => grp_compute_mac_sub_fu_440_xi_s_0_read,
        mro_s_0_dout => mro_s_0_09_dout,
        mro_s_0_empty_n => mro_s_0_09_empty_n,
        mro_s_0_read => grp_compute_mac_sub_fu_440_mro_s_0_read,
        qzeros_0_val => qzeros_0_val8,
        qzeros_1_val => qzeros_1_val16,
        qzeros_2_val => qzeros_2_val24,
        qzeros_3_val => qzeros_3_val32,
        qzeros_4_val => qzeros_4_val40,
        qzeros_5_val => qzeros_5_val48,
        qzeros_6_val => qzeros_6_val56,
        qzeros_7_val => qzeros_7_val64,
        qscale_0_val => qscale_0_val72,
        qscale_1_val => qscale_1_val81,
        qscale_2_val => qscale_2_val89,
        qscale_3_val => qscale_3_val98,
        qscale_4_val => qscale_4_val106,
        qscale_5_val => qscale_5_val115,
        qscale_6_val => qscale_6_val123,
        qscale_7_val => qscale_7_val132,
        ap_return_0 => grp_compute_mac_sub_fu_440_ap_return_0,
        ap_return_1 => grp_compute_mac_sub_fu_440_ap_return_1,
        ap_return_2 => grp_compute_mac_sub_fu_440_ap_return_2,
        ap_return_3 => grp_compute_mac_sub_fu_440_ap_return_3,
        ap_return_4 => grp_compute_mac_sub_fu_440_ap_return_4,
        ap_return_5 => grp_compute_mac_sub_fu_440_ap_return_5,
        ap_return_6 => grp_compute_mac_sub_fu_440_ap_return_6,
        ap_return_7 => grp_compute_mac_sub_fu_440_ap_return_7);

    grp_compute_mac_sub_fu_480 : component Macro_MAC_Acc4_top_compute_mac_sub
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_mac_sub_fu_480_ap_start,
        ap_done => grp_compute_mac_sub_fu_480_ap_done,
        ap_idle => grp_compute_mac_sub_fu_480_ap_idle,
        ap_ready => grp_compute_mac_sub_fu_480_ap_ready,
        xi_s_0_dout => xi_s_0_03_dout,
        xi_s_0_empty_n => xi_s_0_03_empty_n,
        xi_s_0_read => grp_compute_mac_sub_fu_480_xi_s_0_read,
        mro_s_0_dout => mro_s_0_010_dout,
        mro_s_0_empty_n => mro_s_0_010_empty_n,
        mro_s_0_read => grp_compute_mac_sub_fu_480_mro_s_0_read,
        qzeros_0_val => qzeros_0_val8,
        qzeros_1_val => qzeros_1_val16,
        qzeros_2_val => qzeros_2_val24,
        qzeros_3_val => qzeros_3_val32,
        qzeros_4_val => qzeros_4_val40,
        qzeros_5_val => qzeros_5_val48,
        qzeros_6_val => qzeros_6_val56,
        qzeros_7_val => qzeros_7_val64,
        qscale_0_val => qscale_0_val72,
        qscale_1_val => qscale_1_val81,
        qscale_2_val => qscale_2_val89,
        qscale_3_val => qscale_3_val98,
        qscale_4_val => qscale_4_val106,
        qscale_5_val => qscale_5_val115,
        qscale_6_val => qscale_6_val123,
        qscale_7_val => qscale_7_val132,
        ap_return_0 => grp_compute_mac_sub_fu_480_ap_return_0,
        ap_return_1 => grp_compute_mac_sub_fu_480_ap_return_1,
        ap_return_2 => grp_compute_mac_sub_fu_480_ap_return_2,
        ap_return_3 => grp_compute_mac_sub_fu_480_ap_return_3,
        ap_return_4 => grp_compute_mac_sub_fu_480_ap_return_4,
        ap_return_5 => grp_compute_mac_sub_fu_480_ap_return_5,
        ap_return_6 => grp_compute_mac_sub_fu_480_ap_return_6,
        ap_return_7 => grp_compute_mac_sub_fu_480_ap_return_7);

    grp_compute_mac_sub_fu_520 : component Macro_MAC_Acc4_top_compute_mac_sub
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_mac_sub_fu_520_ap_start,
        ap_done => grp_compute_mac_sub_fu_520_ap_done,
        ap_idle => grp_compute_mac_sub_fu_520_ap_idle,
        ap_ready => grp_compute_mac_sub_fu_520_ap_ready,
        xi_s_0_dout => xi_s_0_04_dout,
        xi_s_0_empty_n => xi_s_0_04_empty_n,
        xi_s_0_read => grp_compute_mac_sub_fu_520_xi_s_0_read,
        mro_s_0_dout => mro_s_0_011_dout,
        mro_s_0_empty_n => mro_s_0_011_empty_n,
        mro_s_0_read => grp_compute_mac_sub_fu_520_mro_s_0_read,
        qzeros_0_val => qzeros_0_val8,
        qzeros_1_val => qzeros_1_val16,
        qzeros_2_val => qzeros_2_val24,
        qzeros_3_val => qzeros_3_val32,
        qzeros_4_val => qzeros_4_val40,
        qzeros_5_val => qzeros_5_val48,
        qzeros_6_val => qzeros_6_val56,
        qzeros_7_val => qzeros_7_val64,
        qscale_0_val => qscale_0_val72,
        qscale_1_val => qscale_1_val81,
        qscale_2_val => qscale_2_val89,
        qscale_3_val => qscale_3_val98,
        qscale_4_val => qscale_4_val106,
        qscale_5_val => qscale_5_val115,
        qscale_6_val => qscale_6_val123,
        qscale_7_val => qscale_7_val132,
        ap_return_0 => grp_compute_mac_sub_fu_520_ap_return_0,
        ap_return_1 => grp_compute_mac_sub_fu_520_ap_return_1,
        ap_return_2 => grp_compute_mac_sub_fu_520_ap_return_2,
        ap_return_3 => grp_compute_mac_sub_fu_520_ap_return_3,
        ap_return_4 => grp_compute_mac_sub_fu_520_ap_return_4,
        ap_return_5 => grp_compute_mac_sub_fu_520_ap_return_5,
        ap_return_6 => grp_compute_mac_sub_fu_520_ap_return_6,
        ap_return_7 => grp_compute_mac_sub_fu_520_ap_return_7);

    grp_compute_mac_sub_fu_560 : component Macro_MAC_Acc4_top_compute_mac_sub
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_mac_sub_fu_560_ap_start,
        ap_done => grp_compute_mac_sub_fu_560_ap_done,
        ap_idle => grp_compute_mac_sub_fu_560_ap_idle,
        ap_ready => grp_compute_mac_sub_fu_560_ap_ready,
        xi_s_0_dout => xi_s_0_05_dout,
        xi_s_0_empty_n => xi_s_0_05_empty_n,
        xi_s_0_read => grp_compute_mac_sub_fu_560_xi_s_0_read,
        mro_s_0_dout => mro_s_0_012_dout,
        mro_s_0_empty_n => mro_s_0_012_empty_n,
        mro_s_0_read => grp_compute_mac_sub_fu_560_mro_s_0_read,
        qzeros_0_val => qzeros_0_val8,
        qzeros_1_val => qzeros_1_val16,
        qzeros_2_val => qzeros_2_val24,
        qzeros_3_val => qzeros_3_val32,
        qzeros_4_val => qzeros_4_val40,
        qzeros_5_val => qzeros_5_val48,
        qzeros_6_val => qzeros_6_val56,
        qzeros_7_val => qzeros_7_val64,
        qscale_0_val => qscale_0_val72,
        qscale_1_val => qscale_1_val81,
        qscale_2_val => qscale_2_val89,
        qscale_3_val => qscale_3_val98,
        qscale_4_val => qscale_4_val106,
        qscale_5_val => qscale_5_val115,
        qscale_6_val => qscale_6_val123,
        qscale_7_val => qscale_7_val132,
        ap_return_0 => grp_compute_mac_sub_fu_560_ap_return_0,
        ap_return_1 => grp_compute_mac_sub_fu_560_ap_return_1,
        ap_return_2 => grp_compute_mac_sub_fu_560_ap_return_2,
        ap_return_3 => grp_compute_mac_sub_fu_560_ap_return_3,
        ap_return_4 => grp_compute_mac_sub_fu_560_ap_return_4,
        ap_return_5 => grp_compute_mac_sub_fu_560_ap_return_5,
        ap_return_6 => grp_compute_mac_sub_fu_560_ap_return_6,
        ap_return_7 => grp_compute_mac_sub_fu_560_ap_return_7);

    grp_compute_mac_sub_fu_600 : component Macro_MAC_Acc4_top_compute_mac_sub
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_mac_sub_fu_600_ap_start,
        ap_done => grp_compute_mac_sub_fu_600_ap_done,
        ap_idle => grp_compute_mac_sub_fu_600_ap_idle,
        ap_ready => grp_compute_mac_sub_fu_600_ap_ready,
        xi_s_0_dout => xi_s_0_06_dout,
        xi_s_0_empty_n => xi_s_0_06_empty_n,
        xi_s_0_read => grp_compute_mac_sub_fu_600_xi_s_0_read,
        mro_s_0_dout => mro_s_0_013_dout,
        mro_s_0_empty_n => mro_s_0_013_empty_n,
        mro_s_0_read => grp_compute_mac_sub_fu_600_mro_s_0_read,
        qzeros_0_val => qzeros_0_val8,
        qzeros_1_val => qzeros_1_val16,
        qzeros_2_val => qzeros_2_val24,
        qzeros_3_val => qzeros_3_val32,
        qzeros_4_val => qzeros_4_val40,
        qzeros_5_val => qzeros_5_val48,
        qzeros_6_val => qzeros_6_val56,
        qzeros_7_val => qzeros_7_val64,
        qscale_0_val => qscale_0_val72,
        qscale_1_val => qscale_1_val81,
        qscale_2_val => qscale_2_val89,
        qscale_3_val => qscale_3_val98,
        qscale_4_val => qscale_4_val106,
        qscale_5_val => qscale_5_val115,
        qscale_6_val => qscale_6_val123,
        qscale_7_val => qscale_7_val132,
        ap_return_0 => grp_compute_mac_sub_fu_600_ap_return_0,
        ap_return_1 => grp_compute_mac_sub_fu_600_ap_return_1,
        ap_return_2 => grp_compute_mac_sub_fu_600_ap_return_2,
        ap_return_3 => grp_compute_mac_sub_fu_600_ap_return_3,
        ap_return_4 => grp_compute_mac_sub_fu_600_ap_return_4,
        ap_return_5 => grp_compute_mac_sub_fu_600_ap_return_5,
        ap_return_6 => grp_compute_mac_sub_fu_600_ap_return_6,
        ap_return_7 => grp_compute_mac_sub_fu_600_ap_return_7);

    grp_compute_mac_sub_fu_640 : component Macro_MAC_Acc4_top_compute_mac_sub
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_mac_sub_fu_640_ap_start,
        ap_done => grp_compute_mac_sub_fu_640_ap_done,
        ap_idle => grp_compute_mac_sub_fu_640_ap_idle,
        ap_ready => grp_compute_mac_sub_fu_640_ap_ready,
        xi_s_0_dout => xi_s_0_07_dout,
        xi_s_0_empty_n => xi_s_0_07_empty_n,
        xi_s_0_read => grp_compute_mac_sub_fu_640_xi_s_0_read,
        mro_s_0_dout => mro_s_0_014_dout,
        mro_s_0_empty_n => mro_s_0_014_empty_n,
        mro_s_0_read => grp_compute_mac_sub_fu_640_mro_s_0_read,
        qzeros_0_val => qzeros_0_val8,
        qzeros_1_val => qzeros_1_val16,
        qzeros_2_val => qzeros_2_val24,
        qzeros_3_val => qzeros_3_val32,
        qzeros_4_val => qzeros_4_val40,
        qzeros_5_val => qzeros_5_val48,
        qzeros_6_val => qzeros_6_val56,
        qzeros_7_val => qzeros_7_val64,
        qscale_0_val => qscale_0_val72,
        qscale_1_val => qscale_1_val81,
        qscale_2_val => qscale_2_val89,
        qscale_3_val => qscale_3_val98,
        qscale_4_val => qscale_4_val106,
        qscale_5_val => qscale_5_val115,
        qscale_6_val => qscale_6_val123,
        qscale_7_val => qscale_7_val132,
        ap_return_0 => grp_compute_mac_sub_fu_640_ap_return_0,
        ap_return_1 => grp_compute_mac_sub_fu_640_ap_return_1,
        ap_return_2 => grp_compute_mac_sub_fu_640_ap_return_2,
        ap_return_3 => grp_compute_mac_sub_fu_640_ap_return_3,
        ap_return_4 => grp_compute_mac_sub_fu_640_ap_return_4,
        ap_return_5 => grp_compute_mac_sub_fu_640_ap_return_5,
        ap_return_6 => grp_compute_mac_sub_fu_640_ap_return_6,
        ap_return_7 => grp_compute_mac_sub_fu_640_ap_return_7);

    fadd_32ns_32ns_32_6_no_dsp_1_U187 : component Macro_MAC_Acc4_top_fadd_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_reg_1827,
        din1 => tmp_8_reg_1832,
        ce => ap_const_logic_1,
        dout => grp_fu_680_p2);

    fadd_32ns_32ns_32_6_no_dsp_1_U188 : component Macro_MAC_Acc4_top_fadd_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_9_reg_1837,
        din1 => tmp_s_reg_1842,
        ce => ap_const_logic_1,
        dout => grp_fu_684_p2);

    fadd_32ns_32ns_32_6_no_dsp_1_U189 : component Macro_MAC_Acc4_top_fadd_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_1_reg_1847,
        din1 => tmp_2_reg_1852,
        ce => ap_const_logic_1,
        dout => grp_fu_688_p2);

    fadd_32ns_32ns_32_6_no_dsp_1_U190 : component Macro_MAC_Acc4_top_fadd_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_3_reg_1857,
        din1 => tmp_4_reg_1862,
        ce => ap_const_logic_1,
        dout => grp_fu_692_p2);

    fadd_32ns_32ns_32_6_no_dsp_1_U191 : component Macro_MAC_Acc4_top_fadd_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add_reg_1867,
        din1 => add1_reg_1872,
        ce => ap_const_logic_1,
        dout => grp_fu_696_p2);

    fadd_32ns_32ns_32_6_no_dsp_1_U192 : component Macro_MAC_Acc4_top_fadd_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add2_reg_1877,
        din1 => add3_reg_1882,
        ce => ap_const_logic_1,
        dout => grp_fu_700_p2);

    fadd_32ns_32ns_32_6_no_dsp_1_U193 : component Macro_MAC_Acc4_top_fadd_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add4_reg_1887,
        din1 => add5_reg_1892,
        ce => ap_const_logic_1,
        dout => grp_fu_704_p2);

    fadd_32ns_32ns_32_6_no_dsp_1_U194 : component Macro_MAC_Acc4_top_fadd_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_5_reg_1902,
        din1 => final_sum_reg_1897,
        ce => ap_const_logic_1,
        dout => grp_fu_708_p2);

    sparsemux_17_3_32_1_1_U195 : component Macro_MAC_Acc4_top_sparsemux_17_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000",
        din0_WIDTH => 32,
        CASE1 => "001",
        din1_WIDTH => 32,
        CASE2 => "010",
        din2_WIDTH => 32,
        CASE3 => "011",
        din3_WIDTH => 32,
        CASE4 => "100",
        din4_WIDTH => 32,
        CASE5 => "101",
        din5_WIDTH => 32,
        CASE6 => "110",
        din6_WIDTH => 32,
        CASE7 => "111",
        din7_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => pout_temp_reg_1499,
        din1 => pout_temp_1_reg_1504,
        din2 => pout_temp_2_reg_1509,
        din3 => pout_temp_3_reg_1514,
        din4 => pout_temp_4_reg_1519,
        din5 => pout_temp_5_reg_1524,
        din6 => pout_temp_6_reg_1529,
        din7 => pout_temp_7_reg_1534,
        def => tmp_fu_1000_p17,
        sel => trunc_ln235_fu_996_p1,
        dout => tmp_fu_1000_p19);

    sparsemux_17_3_32_1_1_U196 : component Macro_MAC_Acc4_top_sparsemux_17_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000",
        din0_WIDTH => 32,
        CASE1 => "001",
        din1_WIDTH => 32,
        CASE2 => "010",
        din2_WIDTH => 32,
        CASE3 => "011",
        din3_WIDTH => 32,
        CASE4 => "100",
        din4_WIDTH => 32,
        CASE5 => "101",
        din5_WIDTH => 32,
        CASE6 => "110",
        din6_WIDTH => 32,
        CASE7 => "111",
        din7_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => pout_temp_8_reg_1539,
        din1 => pout_temp_9_reg_1544,
        din2 => pout_temp_10_reg_1549,
        din3 => pout_temp_11_reg_1554,
        din4 => pout_temp_12_reg_1559,
        din5 => pout_temp_13_reg_1564,
        din6 => pout_temp_14_reg_1569,
        din7 => pout_temp_15_reg_1574,
        def => tmp_8_fu_1032_p17,
        sel => trunc_ln235_fu_996_p1,
        dout => tmp_8_fu_1032_p19);

    sparsemux_17_3_32_1_1_U197 : component Macro_MAC_Acc4_top_sparsemux_17_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000",
        din0_WIDTH => 32,
        CASE1 => "001",
        din1_WIDTH => 32,
        CASE2 => "010",
        din2_WIDTH => 32,
        CASE3 => "011",
        din3_WIDTH => 32,
        CASE4 => "100",
        din4_WIDTH => 32,
        CASE5 => "101",
        din5_WIDTH => 32,
        CASE6 => "110",
        din6_WIDTH => 32,
        CASE7 => "111",
        din7_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => pout_temp_16_reg_1579,
        din1 => pout_temp_17_reg_1584,
        din2 => pout_temp_18_reg_1589,
        din3 => pout_temp_19_reg_1594,
        din4 => pout_temp_20_reg_1599,
        din5 => pout_temp_21_reg_1604,
        din6 => pout_temp_22_reg_1609,
        din7 => pout_temp_23_reg_1614,
        def => tmp_9_fu_1064_p17,
        sel => trunc_ln235_fu_996_p1,
        dout => tmp_9_fu_1064_p19);

    sparsemux_17_3_32_1_1_U198 : component Macro_MAC_Acc4_top_sparsemux_17_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000",
        din0_WIDTH => 32,
        CASE1 => "001",
        din1_WIDTH => 32,
        CASE2 => "010",
        din2_WIDTH => 32,
        CASE3 => "011",
        din3_WIDTH => 32,
        CASE4 => "100",
        din4_WIDTH => 32,
        CASE5 => "101",
        din5_WIDTH => 32,
        CASE6 => "110",
        din6_WIDTH => 32,
        CASE7 => "111",
        din7_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => pout_temp_24_reg_1619,
        din1 => pout_temp_25_reg_1624,
        din2 => pout_temp_26_reg_1629,
        din3 => pout_temp_27_reg_1634,
        din4 => pout_temp_28_reg_1639,
        din5 => pout_temp_29_reg_1644,
        din6 => pout_temp_30_reg_1649,
        din7 => pout_temp_31_reg_1654,
        def => tmp_s_fu_1096_p17,
        sel => trunc_ln235_fu_996_p1,
        dout => tmp_s_fu_1096_p19);

    sparsemux_17_3_32_1_1_U199 : component Macro_MAC_Acc4_top_sparsemux_17_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000",
        din0_WIDTH => 32,
        CASE1 => "001",
        din1_WIDTH => 32,
        CASE2 => "010",
        din2_WIDTH => 32,
        CASE3 => "011",
        din3_WIDTH => 32,
        CASE4 => "100",
        din4_WIDTH => 32,
        CASE5 => "101",
        din5_WIDTH => 32,
        CASE6 => "110",
        din6_WIDTH => 32,
        CASE7 => "111",
        din7_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => pout_temp_32_reg_1659,
        din1 => pout_temp_33_reg_1664,
        din2 => pout_temp_34_reg_1669,
        din3 => pout_temp_35_reg_1674,
        din4 => pout_temp_36_reg_1679,
        din5 => pout_temp_37_reg_1684,
        din6 => pout_temp_38_reg_1689,
        din7 => pout_temp_39_reg_1694,
        def => tmp_1_fu_1128_p17,
        sel => trunc_ln235_fu_996_p1,
        dout => tmp_1_fu_1128_p19);

    sparsemux_17_3_32_1_1_U200 : component Macro_MAC_Acc4_top_sparsemux_17_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000",
        din0_WIDTH => 32,
        CASE1 => "001",
        din1_WIDTH => 32,
        CASE2 => "010",
        din2_WIDTH => 32,
        CASE3 => "011",
        din3_WIDTH => 32,
        CASE4 => "100",
        din4_WIDTH => 32,
        CASE5 => "101",
        din5_WIDTH => 32,
        CASE6 => "110",
        din6_WIDTH => 32,
        CASE7 => "111",
        din7_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => pout_temp_40_reg_1699,
        din1 => pout_temp_41_reg_1704,
        din2 => pout_temp_42_reg_1709,
        din3 => pout_temp_43_reg_1714,
        din4 => pout_temp_44_reg_1719,
        din5 => pout_temp_45_reg_1724,
        din6 => pout_temp_46_reg_1729,
        din7 => pout_temp_47_reg_1734,
        def => tmp_2_fu_1160_p17,
        sel => trunc_ln235_fu_996_p1,
        dout => tmp_2_fu_1160_p19);

    sparsemux_17_3_32_1_1_U201 : component Macro_MAC_Acc4_top_sparsemux_17_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000",
        din0_WIDTH => 32,
        CASE1 => "001",
        din1_WIDTH => 32,
        CASE2 => "010",
        din2_WIDTH => 32,
        CASE3 => "011",
        din3_WIDTH => 32,
        CASE4 => "100",
        din4_WIDTH => 32,
        CASE5 => "101",
        din5_WIDTH => 32,
        CASE6 => "110",
        din6_WIDTH => 32,
        CASE7 => "111",
        din7_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => pout_temp_48_reg_1739,
        din1 => pout_temp_49_reg_1744,
        din2 => pout_temp_50_reg_1749,
        din3 => pout_temp_51_reg_1754,
        din4 => pout_temp_52_reg_1759,
        din5 => pout_temp_53_reg_1764,
        din6 => pout_temp_54_reg_1769,
        din7 => pout_temp_55_reg_1774,
        def => tmp_3_fu_1192_p17,
        sel => trunc_ln235_fu_996_p1,
        dout => tmp_3_fu_1192_p19);

    sparsemux_17_3_32_1_1_U202 : component Macro_MAC_Acc4_top_sparsemux_17_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000",
        din0_WIDTH => 32,
        CASE1 => "001",
        din1_WIDTH => 32,
        CASE2 => "010",
        din2_WIDTH => 32,
        CASE3 => "011",
        din3_WIDTH => 32,
        CASE4 => "100",
        din4_WIDTH => 32,
        CASE5 => "101",
        din5_WIDTH => 32,
        CASE6 => "110",
        din6_WIDTH => 32,
        CASE7 => "111",
        din7_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => pout_temp_56_reg_1779,
        din1 => pout_temp_57_reg_1784,
        din2 => pout_temp_58_reg_1789,
        din3 => pout_temp_59_reg_1794,
        din4 => pout_temp_60_reg_1799,
        din5 => pout_temp_61_reg_1804,
        din6 => pout_temp_62_reg_1809,
        din7 => pout_temp_63_reg_1814,
        def => tmp_4_fu_1224_p17,
        sel => trunc_ln235_fu_996_p1,
        dout => tmp_4_fu_1224_p19);

    sparsemux_17_3_32_1_1_U203 : component Macro_MAC_Acc4_top_sparsemux_17_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000",
        din0_WIDTH => 32,
        CASE1 => "001",
        din1_WIDTH => 32,
        CASE2 => "010",
        din2_WIDTH => 32,
        CASE3 => "011",
        din3_WIDTH => 32,
        CASE4 => "100",
        din4_WIDTH => 32,
        CASE5 => "101",
        din5_WIDTH => 32,
        CASE6 => "110",
        din6_WIDTH => 32,
        CASE7 => "111",
        din7_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => pout_local_0_i,
        din1 => pout_local_1_i,
        din2 => pout_local_2_i,
        din3 => pout_local_3_i,
        din4 => pout_local_4_i,
        din5 => pout_local_5_i,
        din6 => pout_local_6_i,
        din7 => pout_local_7_i,
        def => tmp_5_fu_1261_p17,
        sel => trunc_ln235_reg_1822_pp0_iter17_reg,
        dout => tmp_5_fu_1261_p19);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                elsif (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_mac_sub_fu_360_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_mac_sub_fu_360_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_compute_mac_sub_fu_360_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_mac_sub_fu_360_ap_ready = ap_const_logic_1)) then 
                    grp_compute_mac_sub_fu_360_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_mac_sub_fu_400_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_mac_sub_fu_400_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_compute_mac_sub_fu_400_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_mac_sub_fu_400_ap_ready = ap_const_logic_1)) then 
                    grp_compute_mac_sub_fu_400_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_mac_sub_fu_440_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_mac_sub_fu_440_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_compute_mac_sub_fu_440_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_mac_sub_fu_440_ap_ready = ap_const_logic_1)) then 
                    grp_compute_mac_sub_fu_440_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_mac_sub_fu_480_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_mac_sub_fu_480_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_compute_mac_sub_fu_480_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_mac_sub_fu_480_ap_ready = ap_const_logic_1)) then 
                    grp_compute_mac_sub_fu_480_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_mac_sub_fu_520_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_mac_sub_fu_520_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_compute_mac_sub_fu_520_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_mac_sub_fu_520_ap_ready = ap_const_logic_1)) then 
                    grp_compute_mac_sub_fu_520_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_mac_sub_fu_560_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_mac_sub_fu_560_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_compute_mac_sub_fu_560_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_mac_sub_fu_560_ap_ready = ap_const_logic_1)) then 
                    grp_compute_mac_sub_fu_560_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_mac_sub_fu_600_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_mac_sub_fu_600_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_compute_mac_sub_fu_600_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_mac_sub_fu_600_ap_ready = ap_const_logic_1)) then 
                    grp_compute_mac_sub_fu_600_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_mac_sub_fu_640_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_mac_sub_fu_640_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_compute_mac_sub_fu_640_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_mac_sub_fu_640_ap_ready = ap_const_logic_1)) then 
                    grp_compute_mac_sub_fu_640_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    j_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_fu_156 <= ap_const_lv4_0;
            elsif (((icmp_ln235_fu_984_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_fu_156 <= add_ln235_fu_990_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add1_reg_1872 <= grp_fu_684_p2;
                add2_reg_1877 <= grp_fu_688_p2;
                add3_reg_1882 <= grp_fu_692_p2;
                add4_reg_1887 <= grp_fu_696_p2;
                add5_reg_1892 <= grp_fu_700_p2;
                add_reg_1867 <= grp_fu_680_p2;
                final_sum_reg_1897 <= grp_fu_704_p2;
                tmp_5_reg_1902 <= tmp_5_fu_1261_p19;
                trunc_ln235_reg_1822_pp0_iter10_reg <= trunc_ln235_reg_1822_pp0_iter9_reg;
                trunc_ln235_reg_1822_pp0_iter11_reg <= trunc_ln235_reg_1822_pp0_iter10_reg;
                trunc_ln235_reg_1822_pp0_iter12_reg <= trunc_ln235_reg_1822_pp0_iter11_reg;
                trunc_ln235_reg_1822_pp0_iter13_reg <= trunc_ln235_reg_1822_pp0_iter12_reg;
                trunc_ln235_reg_1822_pp0_iter14_reg <= trunc_ln235_reg_1822_pp0_iter13_reg;
                trunc_ln235_reg_1822_pp0_iter15_reg <= trunc_ln235_reg_1822_pp0_iter14_reg;
                trunc_ln235_reg_1822_pp0_iter16_reg <= trunc_ln235_reg_1822_pp0_iter15_reg;
                trunc_ln235_reg_1822_pp0_iter17_reg <= trunc_ln235_reg_1822_pp0_iter16_reg;
                trunc_ln235_reg_1822_pp0_iter18_reg <= trunc_ln235_reg_1822_pp0_iter17_reg;
                trunc_ln235_reg_1822_pp0_iter19_reg <= trunc_ln235_reg_1822_pp0_iter18_reg;
                trunc_ln235_reg_1822_pp0_iter20_reg <= trunc_ln235_reg_1822_pp0_iter19_reg;
                trunc_ln235_reg_1822_pp0_iter21_reg <= trunc_ln235_reg_1822_pp0_iter20_reg;
                trunc_ln235_reg_1822_pp0_iter22_reg <= trunc_ln235_reg_1822_pp0_iter21_reg;
                trunc_ln235_reg_1822_pp0_iter23_reg <= trunc_ln235_reg_1822_pp0_iter22_reg;
                trunc_ln235_reg_1822_pp0_iter2_reg <= trunc_ln235_reg_1822_pp0_iter1_reg;
                trunc_ln235_reg_1822_pp0_iter3_reg <= trunc_ln235_reg_1822_pp0_iter2_reg;
                trunc_ln235_reg_1822_pp0_iter4_reg <= trunc_ln235_reg_1822_pp0_iter3_reg;
                trunc_ln235_reg_1822_pp0_iter5_reg <= trunc_ln235_reg_1822_pp0_iter4_reg;
                trunc_ln235_reg_1822_pp0_iter6_reg <= trunc_ln235_reg_1822_pp0_iter5_reg;
                trunc_ln235_reg_1822_pp0_iter7_reg <= trunc_ln235_reg_1822_pp0_iter6_reg;
                trunc_ln235_reg_1822_pp0_iter8_reg <= trunc_ln235_reg_1822_pp0_iter7_reg;
                trunc_ln235_reg_1822_pp0_iter9_reg <= trunc_ln235_reg_1822_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                pout_temp_10_reg_1549 <= grp_compute_mac_sub_fu_400_ap_return_2;
                pout_temp_11_reg_1554 <= grp_compute_mac_sub_fu_400_ap_return_3;
                pout_temp_12_reg_1559 <= grp_compute_mac_sub_fu_400_ap_return_4;
                pout_temp_13_reg_1564 <= grp_compute_mac_sub_fu_400_ap_return_5;
                pout_temp_14_reg_1569 <= grp_compute_mac_sub_fu_400_ap_return_6;
                pout_temp_15_reg_1574 <= grp_compute_mac_sub_fu_400_ap_return_7;
                pout_temp_16_reg_1579 <= grp_compute_mac_sub_fu_440_ap_return_0;
                pout_temp_17_reg_1584 <= grp_compute_mac_sub_fu_440_ap_return_1;
                pout_temp_18_reg_1589 <= grp_compute_mac_sub_fu_440_ap_return_2;
                pout_temp_19_reg_1594 <= grp_compute_mac_sub_fu_440_ap_return_3;
                pout_temp_1_reg_1504 <= grp_compute_mac_sub_fu_360_ap_return_1;
                pout_temp_20_reg_1599 <= grp_compute_mac_sub_fu_440_ap_return_4;
                pout_temp_21_reg_1604 <= grp_compute_mac_sub_fu_440_ap_return_5;
                pout_temp_22_reg_1609 <= grp_compute_mac_sub_fu_440_ap_return_6;
                pout_temp_23_reg_1614 <= grp_compute_mac_sub_fu_440_ap_return_7;
                pout_temp_24_reg_1619 <= grp_compute_mac_sub_fu_480_ap_return_0;
                pout_temp_25_reg_1624 <= grp_compute_mac_sub_fu_480_ap_return_1;
                pout_temp_26_reg_1629 <= grp_compute_mac_sub_fu_480_ap_return_2;
                pout_temp_27_reg_1634 <= grp_compute_mac_sub_fu_480_ap_return_3;
                pout_temp_28_reg_1639 <= grp_compute_mac_sub_fu_480_ap_return_4;
                pout_temp_29_reg_1644 <= grp_compute_mac_sub_fu_480_ap_return_5;
                pout_temp_2_reg_1509 <= grp_compute_mac_sub_fu_360_ap_return_2;
                pout_temp_30_reg_1649 <= grp_compute_mac_sub_fu_480_ap_return_6;
                pout_temp_31_reg_1654 <= grp_compute_mac_sub_fu_480_ap_return_7;
                pout_temp_32_reg_1659 <= grp_compute_mac_sub_fu_520_ap_return_0;
                pout_temp_33_reg_1664 <= grp_compute_mac_sub_fu_520_ap_return_1;
                pout_temp_34_reg_1669 <= grp_compute_mac_sub_fu_520_ap_return_2;
                pout_temp_35_reg_1674 <= grp_compute_mac_sub_fu_520_ap_return_3;
                pout_temp_36_reg_1679 <= grp_compute_mac_sub_fu_520_ap_return_4;
                pout_temp_37_reg_1684 <= grp_compute_mac_sub_fu_520_ap_return_5;
                pout_temp_38_reg_1689 <= grp_compute_mac_sub_fu_520_ap_return_6;
                pout_temp_39_reg_1694 <= grp_compute_mac_sub_fu_520_ap_return_7;
                pout_temp_3_reg_1514 <= grp_compute_mac_sub_fu_360_ap_return_3;
                pout_temp_40_reg_1699 <= grp_compute_mac_sub_fu_560_ap_return_0;
                pout_temp_41_reg_1704 <= grp_compute_mac_sub_fu_560_ap_return_1;
                pout_temp_42_reg_1709 <= grp_compute_mac_sub_fu_560_ap_return_2;
                pout_temp_43_reg_1714 <= grp_compute_mac_sub_fu_560_ap_return_3;
                pout_temp_44_reg_1719 <= grp_compute_mac_sub_fu_560_ap_return_4;
                pout_temp_45_reg_1724 <= grp_compute_mac_sub_fu_560_ap_return_5;
                pout_temp_46_reg_1729 <= grp_compute_mac_sub_fu_560_ap_return_6;
                pout_temp_47_reg_1734 <= grp_compute_mac_sub_fu_560_ap_return_7;
                pout_temp_48_reg_1739 <= grp_compute_mac_sub_fu_600_ap_return_0;
                pout_temp_49_reg_1744 <= grp_compute_mac_sub_fu_600_ap_return_1;
                pout_temp_4_reg_1519 <= grp_compute_mac_sub_fu_360_ap_return_4;
                pout_temp_50_reg_1749 <= grp_compute_mac_sub_fu_600_ap_return_2;
                pout_temp_51_reg_1754 <= grp_compute_mac_sub_fu_600_ap_return_3;
                pout_temp_52_reg_1759 <= grp_compute_mac_sub_fu_600_ap_return_4;
                pout_temp_53_reg_1764 <= grp_compute_mac_sub_fu_600_ap_return_5;
                pout_temp_54_reg_1769 <= grp_compute_mac_sub_fu_600_ap_return_6;
                pout_temp_55_reg_1774 <= grp_compute_mac_sub_fu_600_ap_return_7;
                pout_temp_56_reg_1779 <= grp_compute_mac_sub_fu_640_ap_return_0;
                pout_temp_57_reg_1784 <= grp_compute_mac_sub_fu_640_ap_return_1;
                pout_temp_58_reg_1789 <= grp_compute_mac_sub_fu_640_ap_return_2;
                pout_temp_59_reg_1794 <= grp_compute_mac_sub_fu_640_ap_return_3;
                pout_temp_5_reg_1524 <= grp_compute_mac_sub_fu_360_ap_return_5;
                pout_temp_60_reg_1799 <= grp_compute_mac_sub_fu_640_ap_return_4;
                pout_temp_61_reg_1804 <= grp_compute_mac_sub_fu_640_ap_return_5;
                pout_temp_62_reg_1809 <= grp_compute_mac_sub_fu_640_ap_return_6;
                pout_temp_63_reg_1814 <= grp_compute_mac_sub_fu_640_ap_return_7;
                pout_temp_6_reg_1529 <= grp_compute_mac_sub_fu_360_ap_return_6;
                pout_temp_7_reg_1534 <= grp_compute_mac_sub_fu_360_ap_return_7;
                pout_temp_8_reg_1539 <= grp_compute_mac_sub_fu_400_ap_return_0;
                pout_temp_9_reg_1544 <= grp_compute_mac_sub_fu_400_ap_return_1;
                pout_temp_reg_1499 <= grp_compute_mac_sub_fu_360_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_1_reg_1847 <= tmp_1_fu_1128_p19;
                tmp_2_reg_1852 <= tmp_2_fu_1160_p19;
                tmp_3_reg_1857 <= tmp_3_fu_1192_p19;
                tmp_4_reg_1862 <= tmp_4_fu_1224_p19;
                tmp_8_reg_1832 <= tmp_8_fu_1032_p19;
                tmp_9_reg_1837 <= tmp_9_fu_1064_p19;
                tmp_reg_1827 <= tmp_fu_1000_p19;
                tmp_s_reg_1842 <= tmp_s_fu_1096_p19;
                trunc_ln235_reg_1822 <= trunc_ln235_fu_996_p1;
                trunc_ln235_reg_1822_pp0_iter1_reg <= trunc_ln235_reg_1822;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, ap_block_state2_on_subcall_done, ap_block_pp0_stage0_subdone, icmp_ln235_fu_984_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln235_fu_984_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln235_fu_984_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln235_fu_990_p2 <= std_logic_vector(unsigned(j_fu_156) + unsigned(ap_const_lv4_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state28 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_on_subcall_done_assign_proc : process(grp_compute_mac_sub_fu_360_ap_done, grp_compute_mac_sub_fu_400_ap_done, grp_compute_mac_sub_fu_440_ap_done, grp_compute_mac_sub_fu_480_ap_done, grp_compute_mac_sub_fu_520_ap_done, grp_compute_mac_sub_fu_560_ap_done, grp_compute_mac_sub_fu_600_ap_done, grp_compute_mac_sub_fu_640_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_compute_mac_sub_fu_640_ap_done = ap_const_logic_0) or (grp_compute_mac_sub_fu_600_ap_done = ap_const_logic_0) or (grp_compute_mac_sub_fu_560_ap_done = ap_const_logic_0) or (grp_compute_mac_sub_fu_520_ap_done = ap_const_logic_0) or (grp_compute_mac_sub_fu_480_ap_done = ap_const_logic_0) or (grp_compute_mac_sub_fu_440_ap_done = ap_const_logic_0) or (grp_compute_mac_sub_fu_400_ap_done = ap_const_logic_0) or (grp_compute_mac_sub_fu_360_ap_done = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln235_fu_984_p2)
    begin
        if ((icmp_ln235_fu_984_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) 
    and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_compute_mac_sub_fu_360_ap_start <= grp_compute_mac_sub_fu_360_ap_start_reg;
    grp_compute_mac_sub_fu_400_ap_start <= grp_compute_mac_sub_fu_400_ap_start_reg;
    grp_compute_mac_sub_fu_440_ap_start <= grp_compute_mac_sub_fu_440_ap_start_reg;
    grp_compute_mac_sub_fu_480_ap_start <= grp_compute_mac_sub_fu_480_ap_start_reg;
    grp_compute_mac_sub_fu_520_ap_start <= grp_compute_mac_sub_fu_520_ap_start_reg;
    grp_compute_mac_sub_fu_560_ap_start <= grp_compute_mac_sub_fu_560_ap_start_reg;
    grp_compute_mac_sub_fu_600_ap_start <= grp_compute_mac_sub_fu_600_ap_start_reg;
    grp_compute_mac_sub_fu_640_ap_start <= grp_compute_mac_sub_fu_640_ap_start_reg;
    icmp_ln235_fu_984_p2 <= "1" when (j_fu_156 = ap_const_lv4_8) else "0";
    mro_s_0_010_read <= grp_compute_mac_sub_fu_480_mro_s_0_read;
    mro_s_0_011_read <= grp_compute_mac_sub_fu_520_mro_s_0_read;
    mro_s_0_012_read <= grp_compute_mac_sub_fu_560_mro_s_0_read;
    mro_s_0_013_read <= grp_compute_mac_sub_fu_600_mro_s_0_read;
    mro_s_0_014_read <= grp_compute_mac_sub_fu_640_mro_s_0_read;
    mro_s_0_08_read <= grp_compute_mac_sub_fu_400_mro_s_0_read;
    mro_s_0_09_read <= grp_compute_mac_sub_fu_440_mro_s_0_read;
    mro_s_0_0_read <= grp_compute_mac_sub_fu_360_mro_s_0_read;

    pout_local_0_o_assign_proc : process(pout_local_0_i, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24, grp_fu_708_p2, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            pout_local_0_o <= grp_fu_708_p2;
        else 
            pout_local_0_o <= pout_local_0_i;
        end if; 
    end process;


    pout_local_0_o_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pout_local_0_o_ap_vld <= ap_const_logic_1;
        else 
            pout_local_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    pout_local_1_o_assign_proc : process(pout_local_1_i, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24, grp_fu_708_p2, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            pout_local_1_o <= grp_fu_708_p2;
        else 
            pout_local_1_o <= pout_local_1_i;
        end if; 
    end process;


    pout_local_1_o_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pout_local_1_o_ap_vld <= ap_const_logic_1;
        else 
            pout_local_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    pout_local_2_o_assign_proc : process(pout_local_2_i, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24, grp_fu_708_p2, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            pout_local_2_o <= grp_fu_708_p2;
        else 
            pout_local_2_o <= pout_local_2_i;
        end if; 
    end process;


    pout_local_2_o_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pout_local_2_o_ap_vld <= ap_const_logic_1;
        else 
            pout_local_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    pout_local_3_o_assign_proc : process(pout_local_3_i, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24, grp_fu_708_p2, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            pout_local_3_o <= grp_fu_708_p2;
        else 
            pout_local_3_o <= pout_local_3_i;
        end if; 
    end process;


    pout_local_3_o_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pout_local_3_o_ap_vld <= ap_const_logic_1;
        else 
            pout_local_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    pout_local_4_o_assign_proc : process(pout_local_4_i, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24, grp_fu_708_p2, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            pout_local_4_o <= grp_fu_708_p2;
        else 
            pout_local_4_o <= pout_local_4_i;
        end if; 
    end process;


    pout_local_4_o_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pout_local_4_o_ap_vld <= ap_const_logic_1;
        else 
            pout_local_4_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    pout_local_5_o_assign_proc : process(pout_local_5_i, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24, grp_fu_708_p2, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            pout_local_5_o <= grp_fu_708_p2;
        else 
            pout_local_5_o <= pout_local_5_i;
        end if; 
    end process;


    pout_local_5_o_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pout_local_5_o_ap_vld <= ap_const_logic_1;
        else 
            pout_local_5_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    pout_local_6_o_assign_proc : process(pout_local_6_i, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24, grp_fu_708_p2, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            pout_local_6_o <= grp_fu_708_p2;
        else 
            pout_local_6_o <= pout_local_6_i;
        end if; 
    end process;


    pout_local_6_o_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pout_local_6_o_ap_vld <= ap_const_logic_1;
        else 
            pout_local_6_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    pout_local_7_o_assign_proc : process(pout_local_7_i, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24, grp_fu_708_p2, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            pout_local_7_o <= grp_fu_708_p2;
        else 
            pout_local_7_o <= pout_local_7_i;
        end if; 
    end process;


    pout_local_7_o_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln235_reg_1822_pp0_iter23_reg, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (trunc_ln235_reg_1822_pp0_iter23_reg = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pout_local_7_o_ap_vld <= ap_const_logic_1;
        else 
            pout_local_7_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_1128_p17 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_2_fu_1160_p17 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_3_fu_1192_p17 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_4_fu_1224_p17 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_5_fu_1261_p17 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_8_fu_1032_p17 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_9_fu_1064_p17 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_fu_1000_p17 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_s_fu_1096_p17 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    trunc_ln235_fu_996_p1 <= j_fu_156(3 - 1 downto 0);
    xi_s_0_01_read <= grp_compute_mac_sub_fu_400_xi_s_0_read;
    xi_s_0_02_read <= grp_compute_mac_sub_fu_440_xi_s_0_read;
    xi_s_0_03_read <= grp_compute_mac_sub_fu_480_xi_s_0_read;
    xi_s_0_04_read <= grp_compute_mac_sub_fu_520_xi_s_0_read;
    xi_s_0_05_read <= grp_compute_mac_sub_fu_560_xi_s_0_read;
    xi_s_0_06_read <= grp_compute_mac_sub_fu_600_xi_s_0_read;
    xi_s_0_07_read <= grp_compute_mac_sub_fu_640_xi_s_0_read;
    xi_s_0_0_read <= grp_compute_mac_sub_fu_360_xi_s_0_read;
end behav;
