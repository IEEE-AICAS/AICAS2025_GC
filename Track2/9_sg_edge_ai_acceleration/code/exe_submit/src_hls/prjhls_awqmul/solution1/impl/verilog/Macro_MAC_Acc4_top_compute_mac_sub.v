// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Macro_MAC_Acc4_top_compute_mac_sub (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        xi_s_0_dout,
        xi_s_0_empty_n,
        xi_s_0_read,
        mro_s_0_dout,
        mro_s_0_empty_n,
        mro_s_0_read,
        qzeros_0_val,
        qzeros_1_val,
        qzeros_2_val,
        qzeros_3_val,
        qzeros_4_val,
        qzeros_5_val,
        qzeros_6_val,
        qzeros_7_val,
        qscale_0_val,
        qscale_1_val,
        qscale_2_val,
        qscale_3_val,
        qscale_4_val,
        qscale_5_val,
        qscale_6_val,
        qscale_7_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] xi_s_0_dout;
input   xi_s_0_empty_n;
output   xi_s_0_read;
input  [31:0] mro_s_0_dout;
input   mro_s_0_empty_n;
output   mro_s_0_read;
input  [3:0] qzeros_0_val;
input  [3:0] qzeros_1_val;
input  [3:0] qzeros_2_val;
input  [3:0] qzeros_3_val;
input  [3:0] qzeros_4_val;
input  [3:0] qzeros_5_val;
input  [3:0] qzeros_6_val;
input  [3:0] qzeros_7_val;
input  [31:0] qscale_0_val;
input  [31:0] qscale_1_val;
input  [31:0] qscale_2_val;
input  [31:0] qscale_3_val;
input  [31:0] qscale_4_val;
input  [31:0] qscale_5_val;
input  [31:0] qscale_6_val;
input  [31:0] qscale_7_val;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;

reg ap_idle;
reg xi_s_0_read;
reg mro_s_0_read;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [0:0] icmp_ln194_reg_826;
reg    ap_condition_exit_pp0_iter0_stage4;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    xi_s_0_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_grp2;
reg    ap_block_pp0_stage1_subdone_grp2_done_reg;
reg    ap_block_pp0_stage1_subdone_grp2;
reg    ap_block_pp0_stage1_subdone;
reg    mro_s_0_blk_n;
wire    ap_block_pp0_stage1_grp1;
reg    ap_block_pp0_stage1_subdone_grp1_done_reg;
reg    ap_block_pp0_stage1_subdone_grp1;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] conv3_i13_i_fu_270_p1;
reg   [4:0] conv3_i13_i_reg_786;
wire   [4:0] conv3_i13_i_1_fu_274_p1;
reg   [4:0] conv3_i13_i_1_reg_791;
wire   [4:0] conv3_i13_i_2_fu_278_p1;
reg   [4:0] conv3_i13_i_2_reg_796;
wire   [4:0] conv3_i13_i_3_fu_282_p1;
reg   [4:0] conv3_i13_i_3_reg_801;
wire   [4:0] conv3_i13_i_4_fu_286_p1;
reg   [4:0] conv3_i13_i_4_reg_806;
wire   [4:0] conv3_i13_i_5_fu_290_p1;
reg   [4:0] conv3_i13_i_5_reg_811;
wire   [4:0] conv3_i13_i_6_fu_294_p1;
reg   [4:0] conv3_i13_i_6_reg_816;
wire   [4:0] conv3_i13_i_7_fu_298_p1;
reg   [4:0] conv3_i13_i_7_reg_821;
wire   [0:0] icmp_ln194_fu_350_p2;
reg   [0:0] icmp_ln194_reg_826_pp0_iter1_reg;
reg   [0:0] icmp_ln194_reg_826_pp0_iter2_reg;
reg   [0:0] icmp_ln194_reg_826_pp0_iter3_reg;
reg   [31:0] xi_val_reg_830;
reg    ap_block_state2_pp0_stage1_iter0_grp2;
reg    ap_block_pp0_stage1_11001_grp2;
wire   [4:0] w_ubias_fu_431_p2;
reg   [4:0] w_ubias_reg_838;
reg    ap_block_state2_pp0_stage1_iter0_grp1;
reg    ap_block_pp0_stage1_11001_grp1;
wire   [4:0] w_ubias_1_fu_440_p2;
reg   [4:0] w_ubias_1_reg_843;
wire   [4:0] w_ubias_2_fu_449_p2;
reg   [4:0] w_ubias_2_reg_848;
wire   [4:0] w_ubias_3_fu_458_p2;
reg   [4:0] w_ubias_3_reg_853;
wire   [4:0] w_ubias_4_fu_467_p2;
reg   [4:0] w_ubias_4_reg_858;
wire   [4:0] w_ubias_5_fu_476_p2;
reg   [4:0] w_ubias_5_reg_863;
wire   [4:0] w_ubias_6_fu_485_p2;
reg   [4:0] w_ubias_6_reg_868;
wire   [4:0] w_ubias_7_fu_494_p2;
reg   [4:0] w_ubias_7_reg_873;
wire  signed [31:0] sext_ln216_fu_499_p1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire  signed [31:0] sext_ln216_1_fu_503_p1;
wire  signed [31:0] sext_ln216_2_fu_507_p1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire  signed [31:0] sext_ln216_3_fu_511_p1;
wire  signed [31:0] sext_ln216_4_fu_515_p1;
wire    ap_block_pp0_stage4_11001;
wire  signed [31:0] sext_ln216_5_fu_519_p1;
wire  signed [31:0] sext_ln216_6_fu_523_p1;
wire  signed [31:0] sext_ln216_7_fu_527_p1;
wire   [31:0] grp_fu_248_p2;
reg   [31:0] mul_reg_918;
wire    ap_block_pp0_stage1_11001_grp0;
reg    ap_block_pp0_stage1_subdone_grp0_done_reg;
wire    ap_block_pp0_stage1_subdone_grp0;
wire   [31:0] grp_fu_252_p2;
reg   [31:0] mul_1_reg_923;
wire   [31:0] grp_fu_256_p2;
reg   [31:0] mul_2_reg_928;
wire   [31:0] grp_fu_260_p2;
reg   [31:0] mul_3_reg_933;
reg   [31:0] mul_4_reg_938;
reg   [31:0] mul_5_reg_943;
reg   [31:0] mul_6_reg_948;
reg   [31:0] mul_7_reg_953;
wire   [31:0] grp_fu_264_p1;
reg   [31:0] conv_reg_958;
wire   [31:0] grp_fu_267_p1;
reg   [31:0] conv_1_reg_963;
reg   [31:0] conv_2_reg_968;
reg   [31:0] conv_3_reg_973;
reg   [31:0] conv_4_reg_978;
reg   [31:0] conv_5_reg_983;
reg   [31:0] conv_6_reg_988;
reg   [31:0] conv_7_reg_993;
reg   [31:0] mul1_reg_998;
reg   [31:0] mul20_1_reg_1003;
reg   [31:0] mul20_2_reg_1008;
reg   [31:0] mul20_3_reg_1013;
reg   [31:0] mul20_4_reg_1028;
reg   [31:0] mul20_5_reg_1033;
reg   [31:0] mul20_6_reg_1048;
reg   [31:0] mul20_7_reg_1053;
wire    ap_block_pp0_stage2_subdone;
reg   [3:0] m_fu_96;
wire   [3:0] m_2_fu_356_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_m_1;
wire    ap_block_pp0_stage0;
reg   [31:0] pout_temp_0_0_fu_100;
wire   [31:0] grp_fu_240_p2;
reg   [31:0] ap_sig_allocacmp_pout_temp_0_0_load;
wire    ap_block_pp0_stage4;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter3_stage2;
reg    ap_idle_pp0_0to2;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
wire    ap_block_pp0_stage2;
reg   [31:0] pout_temp_1_0_fu_104;
wire   [31:0] grp_fu_244_p2;
reg   [31:0] ap_sig_allocacmp_pout_temp_1_0_load;
reg   [31:0] pout_temp_2_0_fu_108;
reg   [31:0] ap_sig_allocacmp_pout_temp_2_0_load;
reg   [31:0] pout_temp_3_0_fu_112;
reg   [31:0] ap_sig_allocacmp_pout_temp_3_0_load;
reg   [31:0] pout_temp_4_0_fu_116;
reg   [31:0] ap_sig_allocacmp_pout_temp_4_0_load;
wire    ap_block_pp0_stage1_grp0;
reg   [31:0] pout_temp_5_0_fu_120;
reg   [31:0] ap_sig_allocacmp_pout_temp_5_0_load;
reg   [31:0] pout_temp_6_0_fu_124;
reg   [31:0] ap_sig_allocacmp_pout_temp_6_0_load;
reg   [31:0] ap_sig_allocacmp_pout_temp_6_0_load_1;
reg   [31:0] pout_temp_7_0_fu_128;
reg   [31:0] ap_sig_allocacmp_pout_temp_7_0_load;
reg   [31:0] ap_sig_allocacmp_pout_temp_7_0_load_1;
reg   [31:0] grp_fu_240_p0;
reg   [31:0] grp_fu_240_p1;
reg   [31:0] grp_fu_244_p0;
reg   [31:0] grp_fu_244_p1;
reg   [31:0] grp_fu_248_p0;
reg   [31:0] grp_fu_248_p1;
wire    ap_block_pp0_stage3;
reg   [31:0] grp_fu_252_p0;
reg   [31:0] grp_fu_252_p1;
reg   [31:0] grp_fu_256_p0;
reg   [31:0] grp_fu_256_p1;
reg   [31:0] grp_fu_260_p0;
reg   [31:0] grp_fu_260_p1;
reg  signed [31:0] grp_fu_264_p0;
reg  signed [31:0] grp_fu_267_p0;
wire   [3:0] trunc_ln98_fu_367_p1;
wire   [4:0] zext_ln215_fu_427_p1;
wire   [3:0] tmp_1_fu_371_p3;
wire   [4:0] zext_ln215_1_fu_436_p1;
wire   [3:0] tmp_2_fu_379_p3;
wire   [4:0] zext_ln215_2_fu_445_p1;
wire   [3:0] tmp_3_fu_387_p3;
wire   [4:0] zext_ln215_3_fu_454_p1;
wire   [3:0] tmp_4_fu_395_p3;
wire   [4:0] zext_ln215_4_fu_463_p1;
wire   [3:0] tmp_5_fu_403_p3;
wire   [4:0] zext_ln215_5_fu_472_p1;
wire   [3:0] tmp_6_fu_411_p3;
wire   [4:0] zext_ln215_6_fu_481_p1;
wire   [3:0] tmp_7_fu_419_p3;
wire   [4:0] zext_ln215_7_fu_490_p1;
reg    grp_fu_240_ce;
reg    ap_block_pp0_stage1_11001;
reg    grp_fu_244_ce;
reg    grp_fu_248_ce;
reg    grp_fu_252_ce;
reg    grp_fu_256_ce;
reg    grp_fu_260_ce;
reg    grp_fu_264_ce;
reg    grp_fu_267_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to4;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp2_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp1_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp0_done_reg = 1'b0;
#0 m_fu_96 = 4'd0;
#0 pout_temp_0_0_fu_100 = 32'd0;
#0 pout_temp_1_0_fu_104 = 32'd0;
#0 pout_temp_2_0_fu_108 = 32'd0;
#0 pout_temp_3_0_fu_112 = 32'd0;
#0 pout_temp_4_0_fu_116 = 32'd0;
#0 pout_temp_5_0_fu_120 = 32'd0;
#0 pout_temp_6_0_fu_124 = 32'd0;
#0 pout_temp_7_0_fu_128 = 32'd0;
#0 ap_done_reg = 1'b0;
end

Macro_MAC_Acc4_top_fadd_32ns_32ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_6_no_dsp_1_U158(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_240_p0),
    .din1(grp_fu_240_p1),
    .ce(grp_fu_240_ce),
    .dout(grp_fu_240_p2)
);

Macro_MAC_Acc4_top_fadd_32ns_32ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_6_no_dsp_1_U159(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_244_p0),
    .din1(grp_fu_244_p1),
    .ce(grp_fu_244_ce),
    .dout(grp_fu_244_p2)
);

Macro_MAC_Acc4_top_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U160(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_248_p0),
    .din1(grp_fu_248_p1),
    .ce(grp_fu_248_ce),
    .dout(grp_fu_248_p2)
);

Macro_MAC_Acc4_top_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U161(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_252_p0),
    .din1(grp_fu_252_p1),
    .ce(grp_fu_252_ce),
    .dout(grp_fu_252_p2)
);

Macro_MAC_Acc4_top_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U162(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_256_p0),
    .din1(grp_fu_256_p1),
    .ce(grp_fu_256_ce),
    .dout(grp_fu_256_p2)
);

Macro_MAC_Acc4_top_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U163(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_260_p0),
    .din1(grp_fu_260_p1),
    .ce(grp_fu_260_ce),
    .dout(grp_fu_260_p2)
);

Macro_MAC_Acc4_top_sitofp_32s_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_6_no_dsp_1_U164(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_264_p0),
    .ce(grp_fu_264_ce),
    .dout(grp_fu_264_p1)
);

Macro_MAC_Acc4_top_sitofp_32s_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_6_no_dsp_1_U165(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_267_p0),
    .ce(grp_fu_267_ce),
    .dout(grp_fu_267_p1)
);

Macro_MAC_Acc4_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage4),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp0)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp1_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp1_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp1)) begin
                ap_block_pp0_stage1_subdone_grp1_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp2_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp2_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp2)) begin
                ap_block_pp0_stage1_subdone_grp2_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage4)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln194_fu_350_p2 == 1'd0))) begin
            m_fu_96 <= m_2_fu_356_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            m_fu_96 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pout_temp_0_0_fu_100 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        pout_temp_0_0_fu_100 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pout_temp_1_0_fu_104 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        pout_temp_1_0_fu_104 <= grp_fu_244_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pout_temp_2_0_fu_108 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            pout_temp_2_0_fu_108 <= grp_fu_240_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pout_temp_3_0_fu_112 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            pout_temp_3_0_fu_112 <= grp_fu_244_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pout_temp_4_0_fu_116 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pout_temp_4_0_fu_116 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pout_temp_5_0_fu_120 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pout_temp_5_0_fu_120 <= grp_fu_244_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pout_temp_6_0_fu_124 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        pout_temp_6_0_fu_124 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pout_temp_7_0_fu_128 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        pout_temp_7_0_fu_128 <= grp_fu_244_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv3_i13_i_1_reg_791[3 : 0] <= conv3_i13_i_1_fu_274_p1[3 : 0];
        conv3_i13_i_2_reg_796[3 : 0] <= conv3_i13_i_2_fu_278_p1[3 : 0];
        conv3_i13_i_3_reg_801[3 : 0] <= conv3_i13_i_3_fu_282_p1[3 : 0];
        conv3_i13_i_4_reg_806[3 : 0] <= conv3_i13_i_4_fu_286_p1[3 : 0];
        conv3_i13_i_5_reg_811[3 : 0] <= conv3_i13_i_5_fu_290_p1[3 : 0];
        conv3_i13_i_6_reg_816[3 : 0] <= conv3_i13_i_6_fu_294_p1[3 : 0];
        conv3_i13_i_7_reg_821[3 : 0] <= conv3_i13_i_7_fu_298_p1[3 : 0];
        conv3_i13_i_reg_786[3 : 0] <= conv3_i13_i_fu_270_p1[3 : 0];
        icmp_ln194_reg_826 <= icmp_ln194_fu_350_p2;
        icmp_ln194_reg_826_pp0_iter1_reg <= icmp_ln194_reg_826;
        icmp_ln194_reg_826_pp0_iter2_reg <= icmp_ln194_reg_826_pp0_iter1_reg;
        icmp_ln194_reg_826_pp0_iter3_reg <= icmp_ln194_reg_826_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv_1_reg_963 <= grp_fu_267_p1;
        conv_reg_958 <= grp_fu_264_p1;
        mul_4_reg_938 <= grp_fu_248_p2;
        mul_5_reg_943 <= grp_fu_252_p2;
        mul_6_reg_948 <= grp_fu_256_p2;
        mul_7_reg_953 <= grp_fu_260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_2_reg_968 <= grp_fu_264_p1;
        conv_3_reg_973 <= grp_fu_267_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv_4_reg_978 <= grp_fu_264_p1;
        conv_5_reg_983 <= grp_fu_267_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_6_reg_988 <= grp_fu_264_p1;
        conv_7_reg_993 <= grp_fu_267_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul1_reg_998 <= grp_fu_248_p2;
        mul20_1_reg_1003 <= grp_fu_252_p2;
        mul20_2_reg_1008 <= grp_fu_256_p2;
        mul20_3_reg_1013 <= grp_fu_260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul20_4_reg_1028 <= grp_fu_248_p2;
        mul20_5_reg_1033 <= grp_fu_252_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul20_6_reg_1048 <= grp_fu_248_p2;
        mul20_7_reg_1053 <= grp_fu_252_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_1_reg_923 <= grp_fu_252_p2;
        mul_2_reg_928 <= grp_fu_256_p2;
        mul_3_reg_933 <= grp_fu_260_p2;
        mul_reg_918 <= grp_fu_248_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001_grp1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        w_ubias_1_reg_843 <= w_ubias_1_fu_440_p2;
        w_ubias_2_reg_848 <= w_ubias_2_fu_449_p2;
        w_ubias_3_reg_853 <= w_ubias_3_fu_458_p2;
        w_ubias_4_reg_858 <= w_ubias_4_fu_467_p2;
        w_ubias_5_reg_863 <= w_ubias_5_fu_476_p2;
        w_ubias_6_reg_868 <= w_ubias_6_fu_485_p2;
        w_ubias_7_reg_873 <= w_ubias_7_fu_494_p2;
        w_ubias_reg_838 <= w_ubias_fu_431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001_grp2) & (1'b0 == ap_block_pp0_stage1_subdone_grp2_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        xi_val_reg_830 <= xi_s_0_dout;
    end
end

always @ (*) begin
    if (((icmp_ln194_reg_826 == 1'd1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln194_reg_826_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter3_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to4 = 1'b1;
    end else begin
        ap_idle_pp0_1to4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_m_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_m_1 = m_fu_96;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_sig_allocacmp_pout_temp_0_0_load = grp_fu_240_p2;
    end else begin
        ap_sig_allocacmp_pout_temp_0_0_load = pout_temp_0_0_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_sig_allocacmp_pout_temp_1_0_load = grp_fu_244_p2;
    end else begin
        ap_sig_allocacmp_pout_temp_1_0_load = pout_temp_1_0_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_pout_temp_2_0_load = grp_fu_240_p2;
    end else begin
        ap_sig_allocacmp_pout_temp_2_0_load = pout_temp_2_0_fu_108;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_pout_temp_3_0_load = grp_fu_244_p2;
    end else begin
        ap_sig_allocacmp_pout_temp_3_0_load = pout_temp_3_0_fu_112;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_grp0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_pout_temp_4_0_load = grp_fu_240_p2;
    end else begin
        ap_sig_allocacmp_pout_temp_4_0_load = pout_temp_4_0_fu_116;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_grp0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_pout_temp_5_0_load = grp_fu_244_p2;
    end else begin
        ap_sig_allocacmp_pout_temp_5_0_load = pout_temp_5_0_fu_120;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_pout_temp_6_0_load = grp_fu_240_p2;
    end else begin
        ap_sig_allocacmp_pout_temp_6_0_load = pout_temp_6_0_fu_124;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_pout_temp_6_0_load_1 = grp_fu_240_p2;
    end else begin
        ap_sig_allocacmp_pout_temp_6_0_load_1 = pout_temp_6_0_fu_124;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_pout_temp_7_0_load = grp_fu_244_p2;
    end else begin
        ap_sig_allocacmp_pout_temp_7_0_load = pout_temp_7_0_fu_128;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_pout_temp_7_0_load_1 = grp_fu_244_p2;
    end else begin
        ap_sig_allocacmp_pout_temp_7_0_load_1 = pout_temp_7_0_fu_128;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_240_ce = 1'b1;
    end else begin
        grp_fu_240_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_240_p0 = ap_sig_allocacmp_pout_temp_6_0_load;
    end else if (((1'b0 == ap_block_pp0_stage1_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_240_p0 = ap_sig_allocacmp_pout_temp_4_0_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_240_p0 = ap_sig_allocacmp_pout_temp_2_0_load;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_240_p0 = ap_sig_allocacmp_pout_temp_0_0_load;
    end else begin
        grp_fu_240_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_240_p1 = mul20_6_reg_1048;
    end else if (((1'b0 == ap_block_pp0_stage1_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_240_p1 = mul20_4_reg_1028;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_240_p1 = mul20_2_reg_1008;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_240_p1 = mul1_reg_998;
    end else begin
        grp_fu_240_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_244_ce = 1'b1;
    end else begin
        grp_fu_244_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_244_p0 = ap_sig_allocacmp_pout_temp_7_0_load;
    end else if (((1'b0 == ap_block_pp0_stage1_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_244_p0 = ap_sig_allocacmp_pout_temp_5_0_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_244_p0 = ap_sig_allocacmp_pout_temp_3_0_load;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_244_p0 = ap_sig_allocacmp_pout_temp_1_0_load;
    end else begin
        grp_fu_244_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_244_p1 = mul20_7_reg_1053;
    end else if (((1'b0 == ap_block_pp0_stage1_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_244_p1 = mul20_5_reg_1033;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_244_p1 = mul20_3_reg_1013;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_244_p1 = mul20_1_reg_1003;
    end else begin
        grp_fu_244_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_248_ce = 1'b1;
    end else begin
        grp_fu_248_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_grp0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_248_p0 = mul_6_reg_948;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_248_p0 = mul_4_reg_938;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_248_p0 = mul_reg_918;
    end else if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_248_p0 = xi_val_reg_830;
    end else begin
        grp_fu_248_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_grp0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_248_p1 = conv_6_reg_988;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_248_p1 = conv_4_reg_978;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_248_p1 = conv_reg_958;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_248_p1 = qscale_4_val;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_248_p1 = qscale_0_val;
    end else begin
        grp_fu_248_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_252_ce = 1'b1;
    end else begin
        grp_fu_252_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_grp0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_252_p0 = mul_7_reg_953;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_252_p0 = mul_5_reg_943;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_252_p0 = mul_1_reg_923;
    end else if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_252_p0 = xi_val_reg_830;
    end else begin
        grp_fu_252_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_grp0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_252_p1 = conv_7_reg_993;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_252_p1 = conv_5_reg_983;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_252_p1 = conv_1_reg_963;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_252_p1 = qscale_5_val;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_252_p1 = qscale_1_val;
    end else begin
        grp_fu_252_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_256_ce = 1'b1;
    end else begin
        grp_fu_256_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_256_p0 = mul_2_reg_928;
    end else if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_256_p0 = xi_val_reg_830;
    end else begin
        grp_fu_256_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_256_p1 = conv_2_reg_968;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_256_p1 = qscale_6_val;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_256_p1 = qscale_2_val;
    end else begin
        grp_fu_256_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_260_ce = 1'b1;
    end else begin
        grp_fu_260_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_260_p0 = mul_3_reg_933;
    end else if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_260_p0 = xi_val_reg_830;
    end else begin
        grp_fu_260_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_260_p1 = conv_3_reg_973;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_260_p1 = qscale_7_val;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_260_p1 = qscale_3_val;
    end else begin
        grp_fu_260_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_264_ce = 1'b1;
    end else begin
        grp_fu_264_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_264_p0 = sext_ln216_6_fu_523_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_264_p0 = sext_ln216_4_fu_515_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_264_p0 = sext_ln216_2_fu_507_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_264_p0 = sext_ln216_fu_499_p1;
    end else begin
        grp_fu_264_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_267_ce = 1'b1;
    end else begin
        grp_fu_267_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_267_p0 = sext_ln216_7_fu_527_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_267_p0 = sext_ln216_5_fu_519_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_267_p0 = sext_ln216_3_fu_511_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_267_p0 = sext_ln216_1_fu_503_p1;
    end else begin
        grp_fu_267_p0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln194_reg_826 == 1'd0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage1_grp1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mro_s_0_blk_n = mro_s_0_empty_n;
    end else begin
        mro_s_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln194_reg_826 == 1'd0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001_grp1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mro_s_0_read = 1'b1;
    end else begin
        mro_s_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln194_reg_826 == 1'd0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp2_done_reg) & (1'b0 == ap_block_pp0_stage1_grp2) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        xi_s_0_blk_n = xi_s_0_empty_n;
    end else begin
        xi_s_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln194_reg_826 == 1'd0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001_grp2) & (1'b0 == ap_block_pp0_stage1_subdone_grp2_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        xi_s_0_read = 1'b1;
    end else begin
        xi_s_0_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to4 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (((1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_block_state2_pp0_stage1_iter0_grp1)) | ((1'b0 == ap_block_pp0_stage1_subdone_grp2_done_reg) & (1'b1 == ap_block_state2_pp0_stage1_iter0_grp2))));
end

assign ap_block_pp0_stage1_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001_grp1 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_block_state2_pp0_stage1_iter0_grp1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_grp2 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp2_done_reg) & (1'b1 == ap_block_state2_pp0_stage1_iter0_grp2));
end

assign ap_block_pp0_stage1_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (((1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_block_state2_pp0_stage1_iter0_grp1)) | ((1'b0 == ap_block_pp0_stage1_subdone_grp2_done_reg) & (1'b1 == ap_block_state2_pp0_stage1_iter0_grp2))));
end

assign ap_block_pp0_stage1_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp1 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_block_state2_pp0_stage1_iter0_grp1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp2 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp2_done_reg) & (1'b1 == ap_block_state2_pp0_stage1_iter0_grp2));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0_grp1 = ((mro_s_0_empty_n == 1'b0) & (icmp_ln194_reg_826 == 1'd0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0_grp2 = ((xi_s_0_empty_n == 1'b0) & (icmp_ln194_reg_826 == 1'd0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage4;

assign ap_ready = ap_ready_sig;

assign ap_return_0 = pout_temp_0_0_fu_100;

assign ap_return_1 = pout_temp_1_0_fu_104;

assign ap_return_2 = pout_temp_2_0_fu_108;

assign ap_return_3 = pout_temp_3_0_fu_112;

assign ap_return_4 = pout_temp_4_0_fu_116;

assign ap_return_5 = pout_temp_5_0_fu_120;

assign ap_return_6 = ap_sig_allocacmp_pout_temp_6_0_load_1;

assign ap_return_7 = ap_sig_allocacmp_pout_temp_7_0_load_1;

assign conv3_i13_i_1_fu_274_p1 = qzeros_1_val;

assign conv3_i13_i_2_fu_278_p1 = qzeros_2_val;

assign conv3_i13_i_3_fu_282_p1 = qzeros_3_val;

assign conv3_i13_i_4_fu_286_p1 = qzeros_4_val;

assign conv3_i13_i_5_fu_290_p1 = qzeros_5_val;

assign conv3_i13_i_6_fu_294_p1 = qzeros_6_val;

assign conv3_i13_i_7_fu_298_p1 = qzeros_7_val;

assign conv3_i13_i_fu_270_p1 = qzeros_0_val;

assign icmp_ln194_fu_350_p2 = ((ap_sig_allocacmp_m_1 == 4'd8) ? 1'b1 : 1'b0);

assign m_2_fu_356_p2 = (ap_sig_allocacmp_m_1 + 4'd1);

assign sext_ln216_1_fu_503_p1 = $signed(w_ubias_1_reg_843);

assign sext_ln216_2_fu_507_p1 = $signed(w_ubias_2_reg_848);

assign sext_ln216_3_fu_511_p1 = $signed(w_ubias_3_reg_853);

assign sext_ln216_4_fu_515_p1 = $signed(w_ubias_4_reg_858);

assign sext_ln216_5_fu_519_p1 = $signed(w_ubias_5_reg_863);

assign sext_ln216_6_fu_523_p1 = $signed(w_ubias_6_reg_868);

assign sext_ln216_7_fu_527_p1 = $signed(w_ubias_7_reg_873);

assign sext_ln216_fu_499_p1 = $signed(w_ubias_reg_838);

assign tmp_1_fu_371_p3 = {{mro_s_0_dout[19:16]}};

assign tmp_2_fu_379_p3 = {{mro_s_0_dout[7:4]}};

assign tmp_3_fu_387_p3 = {{mro_s_0_dout[23:20]}};

assign tmp_4_fu_395_p3 = {{mro_s_0_dout[11:8]}};

assign tmp_5_fu_403_p3 = {{mro_s_0_dout[27:24]}};

assign tmp_6_fu_411_p3 = {{mro_s_0_dout[15:12]}};

assign tmp_7_fu_419_p3 = {{mro_s_0_dout[31:28]}};

assign trunc_ln98_fu_367_p1 = mro_s_0_dout[3:0];

assign w_ubias_1_fu_440_p2 = (zext_ln215_1_fu_436_p1 - conv3_i13_i_1_reg_791);

assign w_ubias_2_fu_449_p2 = (zext_ln215_2_fu_445_p1 - conv3_i13_i_2_reg_796);

assign w_ubias_3_fu_458_p2 = (zext_ln215_3_fu_454_p1 - conv3_i13_i_3_reg_801);

assign w_ubias_4_fu_467_p2 = (zext_ln215_4_fu_463_p1 - conv3_i13_i_4_reg_806);

assign w_ubias_5_fu_476_p2 = (zext_ln215_5_fu_472_p1 - conv3_i13_i_5_reg_811);

assign w_ubias_6_fu_485_p2 = (zext_ln215_6_fu_481_p1 - conv3_i13_i_6_reg_816);

assign w_ubias_7_fu_494_p2 = (zext_ln215_7_fu_490_p1 - conv3_i13_i_7_reg_821);

assign w_ubias_fu_431_p2 = (zext_ln215_fu_427_p1 - conv3_i13_i_reg_786);

assign zext_ln215_1_fu_436_p1 = tmp_1_fu_371_p3;

assign zext_ln215_2_fu_445_p1 = tmp_2_fu_379_p3;

assign zext_ln215_3_fu_454_p1 = tmp_3_fu_387_p3;

assign zext_ln215_4_fu_463_p1 = tmp_4_fu_395_p3;

assign zext_ln215_5_fu_472_p1 = tmp_5_fu_403_p3;

assign zext_ln215_6_fu_481_p1 = tmp_6_fu_411_p3;

assign zext_ln215_7_fu_490_p1 = tmp_7_fu_419_p3;

assign zext_ln215_fu_427_p1 = trunc_ln98_fu_367_p1;

always @ (posedge ap_clk) begin
    conv3_i13_i_reg_786[4] <= 1'b0;
    conv3_i13_i_1_reg_791[4] <= 1'b0;
    conv3_i13_i_2_reg_796[4] <= 1'b0;
    conv3_i13_i_3_reg_801[4] <= 1'b0;
    conv3_i13_i_4_reg_806[4] <= 1'b0;
    conv3_i13_i_5_reg_811[4] <= 1'b0;
    conv3_i13_i_6_reg_816[4] <= 1'b0;
    conv3_i13_i_7_reg_821[4] <= 1'b0;
end

endmodule //Macro_MAC_Acc4_top_compute_mac_sub
